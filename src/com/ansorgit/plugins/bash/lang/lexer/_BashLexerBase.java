package com.ansorgit.plugins.bash.lang.lexer;

import com.intellij.psi.tree.IElementType;
import java.io.IOException;
import java.io.Reader;















































public abstract class _BashLexerBase
  implements BashLexerDef
{
  public static final int YYEOF = -1;
  private static final int ZZ_BUFFERSIZE = 16384;
  public static final int YYINITIAL = 0;
  public static final int S_TEST = 2;
  public static final int S_TEST_COMMAND = 4;
  public static final int S_ARITH = 6;
  public static final int S_ARITH_SQUARE_MODE = 8;
  public static final int S_ARITH_ARRAY_MODE = 10;
  public static final int S_CASE = 12;
  public static final int S_CASE_PATTERN = 14;
  public static final int S_SUBSHELL = 16;
  public static final int S_DOLLAR_PREFIXED = 18;
  public static final int S_ARRAY = 20;
  public static final int S_ASSIGNMENT_LIST = 22;
  public static final int X_STRINGMODE = 24;
  public static final int S_PARAM_EXPANSION = 26;
  public static final int S_PARAM_EXPANSION_PATTERN = 28;
  public static final int S_PARAM_EXPANSION_DELIMITER = 30;
  public static final int S_PARAM_EXPANSION_REPLACEMENT = 32;
  public static final int S_BACKQUOTE = 34;
  public static final int X_HEREDOC_MARKER = 36;
  public static final int X_HEREDOC_MARKER_IGNORE_TABS = 38;
  public static final int X_HEREDOC = 40;
  public static final int S_HEREDOC_EXPECTED = 42;
  public static final int X_HERE_STRING = 44;
  private static final int[] ZZ_LEXSTATE = new int[] { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 19, 19, 0, 0, 20, 20 };









  
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[ZZ_CMAP_Y[ZZ_CMAP_Z[ch >> 10] << 6 | ch >> 4 & 0x3F] << 4 | ch & 0xF];
  }

  
  static final char[] ZZ_CMAP_Z = zzUnpackCMap("\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\b\002\t\001\n\001\013\006\f\001\r\023\f\001\016\001\f\001\017\001\020\n\f\001\021\b\t\001\022\001\023\001\024\001\025\001\026\001\027\001\030\001\031\001\032\001\t\001\033\001\034\002\t\001\f\001\035\003\t\001\036\b\t\001\037\001 \020\t\001!\002\t\001\"\005\t\001#\004\t\001$\001%\004\t)\f\001&\003\f\001'\001(\004\f\001)\n\t\001*΁\t");






  
  static final char[] ZZ_CMAP_Y = zzUnpackCMap("\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\002\001\001\b\001\t\001\n\001\013\001\n\001\013\034\n\001\f\001\r\001\016\b\001\001\017\001\020\001\n\001\021\004\n\001\022\b\n\001\023\n\n\001\024\001\n\001\025\001\024\001\n\001\026\004\001\001\n\001\027\001\030\002\001\002\n\001\027\001\001\001\031\001\024\005\n\001\032\001\033\001\034\001\001\001\035\001\n\001\001\001\036\005\n\001\037\001 \001!\001\n\001\027\001\"\001\n\001#\001$\001\001\001\n\001%\004\001\001\n\001&\004\001\001'\002\n\001(\001\001\001)\001*\001\024\001+\001,\001-\001.\001/\0010\001*\001\r\0011\001,\001-\0012\001\001\0013\0014\0015\0016\001\021\001-\0017\001\001\0018\001*\0019\001:\001,\001-\0017\001\001\0010\001*\001 \001;\001<\001=\001>\001\001\0018\0014\001\001\001?\001\035\001-\001(\001\001\001@\001*\001\001\001?\001\035\001-\001A\001\001\001/\001*\001B\001?\001\035\001\n\001C\001/\001D\001*\001E\001F\001G\001\n\001H\001I\001\001\0014\001\001\001\024\002\n\001J\001I\001K\002\001\001L\001M\001N\001O\001P\001Q\002\001\0018\001\001\001K\001\001\001R\001\n\001S\001\001\001T\007\001\002\n\001\027\001D\001K\001U\001V\001W\001X\001K\002\n\001Y\002\n\001Z\024\n\001[\001\\\002\n\001[\002\n\001]\001^\001_\003\n\001^\003\n\001\027\002\001\001\n\001\001\005\n\001`\001\024%\n\001a\001\n\001\024\001\027\004\n\001\027\001b\001c\001\r\001\n\001\r\001\n\001\r\001c\0018\003\n\001d\001\001\001e\001K\002\001\001K\005\n\001\026\002\n\001f\004\n\001\037\001\n\001g\002\001\0014\001\n\001h\001&\002\n\001i\001\n\001>\001K\002\001\001\n\001I\003\n\001&\002\001\002K\001j\005\001\001F\002\n\001d\001k\001K\002\001\001l\001\n\001m\001!\002\n\001\037\001\001\002\n\001d\001\001\001n\001!\001\n\001h\006\001\001o\001p\f\n\004\001\021\n\001`\002\n\001`\001q\001\n\001h\003\n\001r\001s\001t\001S\001s\007\001\001u\001\001\001S\006\001\001v\001w\001x\001y\001z\003\001\001{g\001\002\n\001g\002\n\001g\b\n\001|\001}\002\n\001Y\003\n\001~\001\001\001\n\001I\004\004\001\001D\035\001\001\002\001\001\001\024\004\n\001\001\024\004\n\001Z\001F\001\n\001h\001\024\004\n\001g\001\001\001\n\001\027\003\001\001\n \001[\n\001\037\004\001]\n\001\037\002\001\b\n\001S\004\001\002\n\001h\020\n\001S\001\n\001\001\001\002\n\001g\001D\001\n\001h\004\n\001\037\002\001\001\001\005\n\001\001\n\001h\001\026\003\001\001\001\001\n\001\030\001\001\003\n\001d\001\002\n\001d\001\001\001K\001\001\001\001!\001\n\001\037\001\n\001I\001\001\001\n\001S\001'\002\n\001\030\001D\001K\001\001\002\n\001%\001\001\001\001K\001\n\001\003\n\001\001\001\001\027\0015\001\001\001\002\n\001Z\001\037\007\n\001\030\001K:\n\001d\001\n\001\002\n\001i\020\001\026\n\001h\006\n\001>\002\001\001I\001\001-\001\001\006\n\001\r\001\001\001l\025\n\001h\001\001\004\n\001\002\n\001\026\002\001\001i\007\001\001\007\n\001S\001\001\001K\001\024\001\027\001\024\001\027\001\004\n\001g\001\001\002\001\001\001\n\001_\001\002h\002\001\007\n\001\027\030\001\001\n\001S\003\n\0018\002\001\002\n\001\001\001\n\001\002\n\001\037\001\n\001h\002\n\001\003\001\t\n\001h\001K\005\001\002\n\001\026\003\n\001d\t\001\023\n\001I\001\n\001\037\001\026\t\001\001\002\n\001\001\n\001\037\001\n\001I\001\n\001g\004\001\001\n\001\001\n\001\037\001\n\001>\004\001\003\n\001 \004\001\0018\001¡\001\n\001d\002\001\001\n\001S\001\n\001S\002\001\001R\001\n\001&\001\001\003\n\001\037\001\n\001\037\001\n\001\030\001\n\001\r\006\001\004\n\001%\003\001\003\n\001\030\003\n\001\0300\001\001l\002\n\001\026\002\001\0014\001\001\001l\002\n\002\001\001\n\001%\001K\001l\001\n\001I\0014\001\001\002\n\001¢\001l\002\n\001\030\001£\001¤\002\001\001\n\001\021\001i\005\001\001¥\001¦\001%\002\n\001g\001\001\001K\001:\001,\001-\0017\001\001\001§\001\r\021\001\003\n\001\001\001¨\001K\n\001\002\n\001g\002\001\001©\002\001\003\n\001\001\001ª\001K\002\001\002\n\001\027\001\001\001K\003\001\001\n\001>\001\001\001K\026\001\004\n\001K\001D\034\001\003\n\001%\020\0019\n\001>\016\001\f\n\001d+\001\002\n\001g=\001$\n\001I\033\001#\n\001%\001\n\001g\001K\006\001\001\n\001h\001\001\003\n\001\001\001d\001K\001l\001«\001\n7\001\004\n\001&\0018\003\001\001l\006\001\001\r?\001\006\n\001\027\001S\001%\001>6\001\005\n\001\003\n\001c\001¬\001­\001®\003\n\001¯\001°\001\n\001±\001²\001\035\024\n\001³\001\n\001\035\001Z\001\n\001Z\001\n\001\001\n\001\001g\001\n\001g\001\n\001-\001\n\001-\001\n\001´\003µ\f\n\001&S\001\001®\001\n\001¶\001·\001¸\001¹\001º\001»\001¼\001i\001½\001i\024\001-\n\001I\002\001C\n\001&\r\n\001hh\n\001\r\025\001!\n\001h\036\001");






















































  
  static final char[] ZZ_CMAP_A = zzUnpackCMap("\t\000\001\004\001\001\001\000\001\004\001\002\022\000\001\"\001\006\001\b\001\005\001\007\001?\001\021\001\t\001\026\001\027\001\022\001\024\001*\001\031\001\016\001>\001\032\007\036\002\020\001@\001!\001<\001'\001;\001\023\001\025\006\034\001=\004\017\001=\001\017\002=\003\017\001=\007\017\001\030\001\003\001\r\001\n\001\017\001 \001,\001\035\001+\001.\001&\0012\001:\0015\001$\001\017\001=\0011\001%\0010\001/\0017\0019\0013\001-\001#\0014\001\017\0016\001\033\001\017\001=\001(\001\037\001)\0018\013\000\001\f\n\000\001\f\004\000\001\f\005\000\027\f\001\013\n\f\004\000\f\f\016\000\005\f\007\000\001\f\001\000\001\f\001\000\005\f\001\000\002\f\002\000\004\f\001\000\001\f\006\000\001\f\001\000\003\f\001\000\001\f\001\000\004\f\001\000\023\f\001\000\013\f\b\000\006\f\001\000\026\f\002\000\001\f\006\000\b\f\b\000\013\f\005\000\003\f\r\000\n\013\004\000\006\f\001\000\001\f\017\000\002\f\007\000\002\f\n\013\003\f\002\000\002\f\001\000\016\f\r\000\t\f\013\000\001\f\016\000\n\013\006\f\004\000\002\f\004\000\001\f\005\000\006\f\004\000\001\f\t\000\001\f\003\000\001\f\007\000\t\f\007\000\005\f\017\000\026\f\003\000\001\f\002\000\001\f\007\000\n\f\004\000\n\013\001\f\004\000\b\f\002\000\002\f\002\000\026\f\001\000\007\f\001\000\001\f\003\000\004\f\003\000\001\f\020\000\001\f\r\000\002\f\001\000\001\f\005\000\006\f\004\000\002\f\001\000\002\f\001\000\002\f\001\000\002\f\017\000\004\f\001\000\001\f\007\000\n\013\002\000\003\f\020\000\t\f\001\000\002\f\001\000\002\f\001\000\005\f\003\000\001\f\002\000\001\f\030\000\001\f\013\000\b\f\002\000\001\f\003\000\001\f\001\000\006\f\003\000\003\f\001\000\004\f\003\000\002\f\001\000\001\f\001\000\002\f\003\000\002\f\003\000\003\f\003\000\f\f\013\000\b\f\001\000\002\f\b\000\003\f\005\000\004\f\001\000\005\f\003\000\001\f\003\000\002\f\r\000\013\f\002\000\001\f\021\000\001\f\n\000\006\f\005\000\022\f\003\000\b\f\001\000\t\f\001\000\001\f\002\000\007\f\t\000\001\f\001\000\002\f\f\000\n\013\007\000\002\f\001\000\001\f\002\000\002\f\001\000\001\f\002\000\001\f\006\000\004\f\001\000\007\f\001\000\003\f\001\000\001\f\001\000\001\f\002\000\002\f\001\000\004\f\001\000\002\f\t\000\001\f\002\000\005\f\001\000\001\f\t\000\n\013\002\000\f\f\001\000\024\f\013\000\005\f\003\000\006\f\004\000\004\f\003\000\001\f\003\000\002\f\007\000\003\f\004\000\r\f\f\000\001\f\001\000\006\f\001\000\001\f\005\000\001\f\002\000\013\f\001\000\r\f\001\000\004\f\002\000\007\f\001\000\001\f\001\000\004\f\002\000\001\f\001\000\004\f\002\000\007\f\001\000\001\f\001\000\004\f\002\000\017\f\001\000\016\f\002\000\006\f\002\000\r\f\002\000\001\f\001\000\b\f\007\000\r\f\001\000\006\f\023\000\001\f\004\000\001\f\003\000\t\f\001\000\001\f\005\000\017\f\001\000\016\f\002\000\f\f\013\000\001\f\r\000\007\f\007\000\016\f\r\000\002\f\n\013\003\000\003\f\t\000\004\f\001\000\004\f\003\000\002\f\t\000\b\f\001\000\001\f\001\000\001\f\001\000\001\f\001\000\006\f\001\000\007\f\001\000\001\f\003\000\003\f\001\000\007\f\003\000\004\f\002\000\006\f\005\000\001\f\r\000\001\f\002\000\001\f\004\000\001\f\002\000\n\f\001\000\001\f\003\000\005\f\006\000\001\f\001\000\001\f\001\000\001\f\001\000\004\f\001\000\013\f\002\000\004\f\005\000\005\f\004\000\001\f\004\000\002\f\013\000\005\f\006\000\004\f\003\000\002\f\f\000\b\f\007\000\b\f\001\000\007\f\006\000\002\f\n\000\005\f\005\000\002\f\003\000\007\f\006\000\003\f\n\013\002\f\013\000\t\f\002\000\027\f\002\000\007\f\001\000\003\f\001\000\004\f\001\000\004\f\002\000\006\f\003\000\001\f\001\000\001\f\002\000\005\f\001\000\n\f\n\013\005\f\001\000\003\f\001\000\b\f\004\000\007\f\003\000\001\f\003\000\002\f\001\000\001\f\003\000\002\f\002\000\005\f\002\000\001\f\001\000\001\f\030\000\003\f\003\000\006\f\002\000\006\f\002\000\006\f\t\000\007\f\004\000\005\f\003\000\005\f\005\000\001\f\001\000\b\f\001\000\005\f\001\000\001\f\001\000\002\f\001\000\002\f\001\000\n\f\006\000\n\f\002\000\006\f\002\000\006\f\002\000\006\f\002\000\003\f\003\000\f\f\001\000\016\f\001\000\002\f\001\000\002\f\001\000\b\f\006\000\004\f\004\000\016\f\002\000\001\f\001\000\f\f\001\000\002\f\003\000\001\f\002\000\004\f\001\000\002\f\n\000\b\f\006\000\006\f\001\000\003\f\001\000\n\f\003\000\001\f\n\000\004\f\013\000\n\013\001\f\001\000\001\f\003\000\007\f\001\000\001\f\001\000\004\f\001\000\017\f\001\000\002\f\f\000\003\f\004\000\002\f\001\000\001\f\020\000\004\f\b\000\001\f\013\000\b\f\005\000\003\f\002\000\001\f\002\000\002\f\002\000\004\f\001\000\f\f\001\000\001\f\001\000\007\f\001\000\021\f\001\000\004\f\002\000\b\f\001\000\007\f\001\000\f\f\001\000\004\f\001\000\005\f\001\000\001\f\003\000\f\f\002\000\013\f\001\000\b\f\002\000\022\013\001\000\002\f\001\000\001\f\002\000\001\f\001\000\n\f\001\000\004\f\001\000\001\f\001\000\001\f\006\000\001\f\004\000\001\f\001\000\001\f\001\000\001\f\001\000\003\f\001\000\002\f\001\000\001\f\002\000\001\f\001\000\001\f\001\000\001\f\001\000\001\f\001\000\001\f\001\000\002\f\001\000\001\f\002\000\004\f\001\000\007\f\001\000\004\f\001\000\004\f\001\000\001\f\001\000\n\f\001\000\005\f\001\000\003\f\001\000\005\f\001\000\005\f");



















































  
  private static final int[] ZZ_ACTION = zzUnpackAction();






















  
  private static final String ZZ_ACTION_PACKED_0 = "\027\000\001\001\002\002\001\003\001\004\001\005\001\006\001\007\001\b\001\001\002\006\001\t\001\n\002\006\001\013\001\f\001\r\001\016\001\t\001\017\001\020\001\021\003\006\001\022\001\023\001\024\007\006\001\025\001\026\001\003\001\027\001\030\001\n\001\013\001\016\001\006\001\017\001\004\003\031\001\007\001\n\001\032\001\017\001\004\001\003\001\033\001\034\001\007\001\035\001\001\001\036\002\006\001\037\001 \001!\001\"\001#\001$\001%\001&\001'\001\037\001\017\001\022\001(\001)\001*\001+\001,\001-\001.\001/\0010\001\001\0011\001\006\001\001\001\021\003\006\001\003\001\005\001\006\001\n\001\013\0012\001\020\001\021\001\006\001\023\001\024\001\025\001\026\001\f\0013\001\016\001\001\001\t\0014\001\t\001\003\002\006\0015\001\025\001\026\0046\0017\0018\001\003\0019\001:\001;\001<\001=\001>\001?\001@\001A\001B\001C\001D\001E\001F\001G\001H\001I\001J\002K\001L\001M\001N\001O\002P\001O\001\004\003O\001Q\001R\001S\001T\001\001\001U\001\001\002V\001\n\001\001\002\000\002W\001\000\003\005\001X\002\000\001\006\001Y\001\000\001Y\001Z\001[\001\000\001\\\002\006\001]\001^\001_\001^\001`\001a\001b\001\006\001c\001d\001e\003\006\001f\003\006\001g\001\006\001h\004\006\001\000\001i\001j\001\000\001k\001l\001\006\005\031\002\006\001m\001n\001o\001l\001p\001q\001r\001\000\001\006\001s\001t\001u\002\000\001v\001\000\001w\001x\001y\001z\001{\001|\001}\001~\001\001\000\001\001\001\001\001\001\001\001\001\000\001v\002\000\001\001\001\002\006\002W\001X\001\000\002\006\001j\001l\001b\001\006\001\000\0016\001=\001\002\000\001\001\000\001\001\001\001\001\001\001\002\001\004\001\000\001O\001\000\001O\001\000\001S\002\001V\002\t\000\003X\003\000\002\006\001\000\001\002\000\002\006\001\001\001\001\001\b\006\001\001\003\006\001\000\002\001\000\002 \001¡\001¢\001£\004\000\003¤\001¥\001¦\001§\001¨\001©\001\006\001\000\001\006\001\000\001\006\002\000\002\006\001¡\003\000\001\004\004O\005\000\002X\001\006\001\000\001\006\001\\\001ª\001\006\001\000\001«\001¬\001­\001®\001¯\001°\001±\001\006\001²\003\006\001\001\000\001 \002\000\001«\001¤\001\000\001³\001\006\003W\001\000\001´\001=\001\000\001O\002\000\001O\003\000\003\006\001\000\002\006\001µ\001¶\001\001 \001¤\001\006\001\000\001=\001\000\001·\001\006\001\000\001\006\001¸";























  
  private static int[] zzUnpackAction() {
    int[] result = new int[484];
    int offset = 0;
    offset = zzUnpackAction("\027\000\001\001\002\002\001\003\001\004\001\005\001\006\001\007\001\b\001\001\002\006\001\t\001\n\002\006\001\013\001\f\001\r\001\016\001\t\001\017\001\020\001\021\003\006\001\022\001\023\001\024\007\006\001\025\001\026\001\003\001\027\001\030\001\n\001\013\001\016\001\006\001\017\001\004\003\031\001\007\001\n\001\032\001\017\001\004\001\003\001\033\001\034\001\007\001\035\001\001\001\036\002\006\001\037\001 \001!\001\"\001#\001$\001%\001&\001'\001\037\001\017\001\022\001(\001)\001*\001+\001,\001-\001.\001/\0010\001\001\0011\001\006\001\001\001\021\003\006\001\003\001\005\001\006\001\n\001\013\0012\001\020\001\021\001\006\001\023\001\024\001\025\001\026\001\f\0013\001\016\001\001\001\t\0014\001\t\001\003\002\006\0015\001\025\001\026\0046\0017\0018\001\003\0019\001:\001;\001<\001=\001>\001?\001@\001A\001B\001C\001D\001E\001F\001G\001H\001I\001J\002K\001L\001M\001N\001O\002P\001O\001\004\003O\001Q\001R\001S\001T\001\001\001U\001\001\002V\001\n\001\001\002\000\002W\001\000\003\005\001X\002\000\001\006\001Y\001\000\001Y\001Z\001[\001\000\001\\\002\006\001]\001^\001_\001^\001`\001a\001b\001\006\001c\001d\001e\003\006\001f\003\006\001g\001\006\001h\004\006\001\000\001i\001j\001\000\001k\001l\001\006\005\031\002\006\001m\001n\001o\001l\001p\001q\001r\001\000\001\006\001s\001t\001u\002\000\001v\001\000\001w\001x\001y\001z\001{\001|\001}\001~\001\001\000\001\001\001\001\001\001\001\001\001\000\001v\002\000\001\001\001\002\006\002W\001X\001\000\002\006\001j\001l\001b\001\006\001\000\0016\001=\001\002\000\001\001\000\001\001\001\001\001\001\001\002\001\004\001\000\001O\001\000\001O\001\000\001S\002\001V\002\t\000\003X\003\000\002\006\001\000\001\002\000\002\006\001\001\001\001\001\b\006\001\001\003\006\001\000\002\001\000\002 \001¡\001¢\001£\004\000\003¤\001¥\001¦\001§\001¨\001©\001\006\001\000\001\006\001\000\001\006\002\000\002\006\001¡\003\000\001\004\004O\005\000\002X\001\006\001\000\001\006\001\\\001ª\001\006\001\000\001«\001¬\001­\001®\001¯\001°\001±\001\006\001²\003\006\001\001\000\001 \002\000\001«\001¤\001\000\001³\001\006\003W\001\000\001´\001=\001\000\001O\002\000\001O\003\000\003\006\001\000\002\006\001µ\001¶\001\001 \001¤\001\006\001\000\001=\001\000\001·\001\006\001\000\001\006\001¸", offset, result);
    return result;
  }
  
  private static int zzUnpackAction(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++); while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }




  
  private static final int[] ZZ_ROWMAP = zzUnpackRowMap();






























  
  private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\000A\000\000Ã\000Ą\000Ņ\000Ɔ\000Ǉ\000Ȉ\000ɉ\000ʊ\000ˋ\000̌\000͍\000Ύ\000Ϗ\000А\000ё\000Ғ\000ӓ\000Ԕ\000Օ\000֖\000ח\000ח\000ؘ\000ٙ\000ښ\000ۛ\000ܜ\000ݝ\000ח\000ޞ\000ߟ\000ࠠ\000ࡡ\000ࢢ\000ࣣ\000त\000ܜ\000॥\000ח\000দ\000ߟ\000১\000ח\000ח\000ਨ\000੩\000પ\000ח\000ח\000ח\000૫\000ବ\000୭\000ம\000௯\000ర\000౱\000ಲ\000ೳ\000ഴ\000൵\000ߟ\000ח\000ߟ\000ߟ\000බ\000෷\000ุ\000๹\000຺\000໻\000༼\000ཽ\000ח\000྾\000࿿\000၀\000ח\000ႁ\000Ⴢ\000ᄃ\000ᅄ\000ח\000ᆅ\000ᇆ\000ሇ\000ቈ\000኉\000ᆅ\000ዊ\000ח\000ጋ\000ח\000ፌ\000ᎍ\000Ꮞ\000ᐏ\000ח\000ח\000ᑐ\000ᒑ\000ᓒ\000ᔓ\000ᆅ\000ח\000ח\000ᕔ\000ᖕ\000ᗖ\000ᐏ\000ᘗ\000ᙘ\000ᚙ\000ᛚ\000᜛\000᝜\000ឝ\000ᛚ\000ឝ\000ח\000ᛚ\000ᛚ\000៞\000ᛚ\000ᛚ\000᠟\000ᡠ\000ᢡ\000ח\000ח\000ᣢ\000ᤣ\000ח\000ח\000ᥤ\000ᦥ\000᧦\000ח\000຺\000໻\000ח\000ᨧ\000ښ\000ᩨ\000ח\000ח\000᪩\000᫪\000ᬫ\000᭬\000ח\000ᮭ\000ᬫ\000ᬫ\000ᬫ\000ᬫ\000ᯮ\000ח\000ח\000ח\000ח\000ᰯ\000ᱰ\000ח\000Ჱ\000ᳲ\000ᴳ\000ח\000ח\000ᵴ\000ᶵ\000ח\000᷶\000ḷ\000Ṹ\000ẹ\000Ỻ\000Ἳ\000ὼ\000᾽\000῾\000‿\000₀\000ח\000⃁\000ℂ\000ח\000⅃\000ↄ\000⇅\000∆\000≇\000⊈\000⋉\000⌊\000⍋\000⎌\000⏍\000ഴ\000␎\000⑏\000ח\000⒐\000ⓑ\000ח\000ח\000ޞ\000ח\000┒\000╓\000▔\000◕\000ח\000ח\000☖\000ח\000♗\000⚘\000⛙\000ח\000ח\000✚\000❛\000➜\000ࠠ\000⟝\000⠞\000⡟\000⢠\000⣡\000ࠠ\000⤢\000⥣\000⦤\000⧥\000⨦\000ח\000ח\000⩧\000ח\000⪨\000⫩\000ח\000ߟ\000⬪\000⭫\000⮬\000⮬\000⯭\000ח\000ח\000ח\000Ⱞ\000ח\000ח\000ח\000Ɐ\000Ⲱ\000ח\000ח\000ח\000ᅄ\000⳱\000ⴲ\000၀\000ח\000ח\000ח\000ח\000ח\000ח\000⵳\000ח\000ⶴ\000ⷵ\000ח\000ח\000ח\000⸶\000ח\000⹷\000ח\000ח\000ᕔ\000ח\000⺸\000⻹\000ח\000⼺\000ࠠ\000⽻\000⾼\000⿽\000〾\000み\000ダ\000㄁\000ㅂ\000ᛚ\000ㆃ\000ח\000㇄\000ᥤ\000㈅\000㉆\000ח\000㊇\000㋈\000ח\000᪩\000ח\000ח\000ח\000ח\000ח\000ח\000ח\000ח\000ᳲ\000㌉\000㍊\000㎋\000㏌\000㐍\000㑎\000ח\000ח\000㒏\000㓐\000ח\000㔑\000₀\000㕒\000㖓\000㗔\000㘕\000㙖\000㚗\000㛘\000ٙ\000ח\000㜙\000㝚\000㞛\000㟜\000㠝\000㡞\000㢟\000㣠\000㤡\000㥢\000㦣\000㧤\000㨥\000ח\000ח\000ח\000ח\000ח\000㩦\000㪧\000㫨\000㬩\000㭪\000㮫\000㯬\000㰭\000ࠠ\000ࠠ\000㱮\000㲯\000㳰\000㴱\000㵲\000㶳\000㷴\000㸵\000㹶\000ח\000ח\000ח\000㺷\000㻸\000㼹\000⵳\000㽺\000ח\000㾻\000ⷵ\000ח\000ח\000ח\000ח\000㿼\000䀽\000䁾\000䂿\000䄀\000䅁\000䆂\000䇃\000䈄\000ᛚ\000䉅\000䊆\000䋇\000䌈\000䍉\000䎊\000䏋\000䐌\000䑍\000䒎\000䓏\000䔐\000㕒\000ߟ\000䕑\000䖒\000䗓\000䘔\000⒐\000ח\000䙕\000䚖\000ߟ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000䛗\000ࠠ\000䜘\000䝙\000䞚\000䟛\000䠜\000䡝\000䢞\000䣟\000ח\000䤠\000䥡\000ࠠ\000䦢\000㈅\000䧣\000䨤\000䩥\000ᛚ\000䪦\000䫧\000䬨\000䭩\000䮪\000䯫\000䰬\000䱭\000䲮\000䳯\000䴰\000䵱\000䶲\000䷳\000临\000ࠠ\000ࠠ\000乵\000亶\000䥡\000᜛\000ᬫ\000价\000伸\000ࠠ\000佹\000侺\000俻\000ࠠ";































  
  private static int[] zzUnpackRowMap() {
    int[] result = new int[484];
    int offset = 0;
    offset = zzUnpackRowMap("\000\000\000A\000\000Ã\000Ą\000Ņ\000Ɔ\000Ǉ\000Ȉ\000ɉ\000ʊ\000ˋ\000̌\000͍\000Ύ\000Ϗ\000А\000ё\000Ғ\000ӓ\000Ԕ\000Օ\000֖\000ח\000ח\000ؘ\000ٙ\000ښ\000ۛ\000ܜ\000ݝ\000ח\000ޞ\000ߟ\000ࠠ\000ࡡ\000ࢢ\000ࣣ\000त\000ܜ\000॥\000ח\000দ\000ߟ\000১\000ח\000ח\000ਨ\000੩\000પ\000ח\000ח\000ח\000૫\000ବ\000୭\000ம\000௯\000ర\000౱\000ಲ\000ೳ\000ഴ\000൵\000ߟ\000ח\000ߟ\000ߟ\000බ\000෷\000ุ\000๹\000຺\000໻\000༼\000ཽ\000ח\000྾\000࿿\000၀\000ח\000ႁ\000Ⴢ\000ᄃ\000ᅄ\000ח\000ᆅ\000ᇆ\000ሇ\000ቈ\000኉\000ᆅ\000ዊ\000ח\000ጋ\000ח\000ፌ\000ᎍ\000Ꮞ\000ᐏ\000ח\000ח\000ᑐ\000ᒑ\000ᓒ\000ᔓ\000ᆅ\000ח\000ח\000ᕔ\000ᖕ\000ᗖ\000ᐏ\000ᘗ\000ᙘ\000ᚙ\000ᛚ\000᜛\000᝜\000ឝ\000ᛚ\000ឝ\000ח\000ᛚ\000ᛚ\000៞\000ᛚ\000ᛚ\000᠟\000ᡠ\000ᢡ\000ח\000ח\000ᣢ\000ᤣ\000ח\000ח\000ᥤ\000ᦥ\000᧦\000ח\000຺\000໻\000ח\000ᨧ\000ښ\000ᩨ\000ח\000ח\000᪩\000᫪\000ᬫ\000᭬\000ח\000ᮭ\000ᬫ\000ᬫ\000ᬫ\000ᬫ\000ᯮ\000ח\000ח\000ח\000ח\000ᰯ\000ᱰ\000ח\000Ჱ\000ᳲ\000ᴳ\000ח\000ח\000ᵴ\000ᶵ\000ח\000᷶\000ḷ\000Ṹ\000ẹ\000Ỻ\000Ἳ\000ὼ\000᾽\000῾\000‿\000₀\000ח\000⃁\000ℂ\000ח\000⅃\000ↄ\000⇅\000∆\000≇\000⊈\000⋉\000⌊\000⍋\000⎌\000⏍\000ഴ\000␎\000⑏\000ח\000⒐\000ⓑ\000ח\000ח\000ޞ\000ח\000┒\000╓\000▔\000◕\000ח\000ח\000☖\000ח\000♗\000⚘\000⛙\000ח\000ח\000✚\000❛\000➜\000ࠠ\000⟝\000⠞\000⡟\000⢠\000⣡\000ࠠ\000⤢\000⥣\000⦤\000⧥\000⨦\000ח\000ח\000⩧\000ח\000⪨\000⫩\000ח\000ߟ\000⬪\000⭫\000⮬\000⮬\000⯭\000ח\000ח\000ח\000Ⱞ\000ח\000ח\000ח\000Ɐ\000Ⲱ\000ח\000ח\000ח\000ᅄ\000⳱\000ⴲ\000၀\000ח\000ח\000ח\000ח\000ח\000ח\000⵳\000ח\000ⶴ\000ⷵ\000ח\000ח\000ח\000⸶\000ח\000⹷\000ח\000ח\000ᕔ\000ח\000⺸\000⻹\000ח\000⼺\000ࠠ\000⽻\000⾼\000⿽\000〾\000み\000ダ\000㄁\000ㅂ\000ᛚ\000ㆃ\000ח\000㇄\000ᥤ\000㈅\000㉆\000ח\000㊇\000㋈\000ח\000᪩\000ח\000ח\000ח\000ח\000ח\000ח\000ח\000ח\000ᳲ\000㌉\000㍊\000㎋\000㏌\000㐍\000㑎\000ח\000ח\000㒏\000㓐\000ח\000㔑\000₀\000㕒\000㖓\000㗔\000㘕\000㙖\000㚗\000㛘\000ٙ\000ח\000㜙\000㝚\000㞛\000㟜\000㠝\000㡞\000㢟\000㣠\000㤡\000㥢\000㦣\000㧤\000㨥\000ח\000ח\000ח\000ח\000ח\000㩦\000㪧\000㫨\000㬩\000㭪\000㮫\000㯬\000㰭\000ࠠ\000ࠠ\000㱮\000㲯\000㳰\000㴱\000㵲\000㶳\000㷴\000㸵\000㹶\000ח\000ח\000ח\000㺷\000㻸\000㼹\000⵳\000㽺\000ח\000㾻\000ⷵ\000ח\000ח\000ח\000ח\000㿼\000䀽\000䁾\000䂿\000䄀\000䅁\000䆂\000䇃\000䈄\000ᛚ\000䉅\000䊆\000䋇\000䌈\000䍉\000䎊\000䏋\000䐌\000䑍\000䒎\000䓏\000䔐\000㕒\000ߟ\000䕑\000䖒\000䗓\000䘔\000⒐\000ח\000䙕\000䚖\000ߟ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000ࠠ\000䛗\000ࠠ\000䜘\000䝙\000䞚\000䟛\000䠜\000䡝\000䢞\000䣟\000ח\000䤠\000䥡\000ࠠ\000䦢\000㈅\000䧣\000䨤\000䩥\000ᛚ\000䪦\000䫧\000䬨\000䭩\000䮪\000䯫\000䰬\000䱭\000䲮\000䳯\000䴰\000䵱\000䶲\000䷳\000临\000ࠠ\000ࠠ\000乵\000亶\000䥡\000᜛\000ᬫ\000价\000伸\000ࠠ\000佹\000侺\000俻\000ࠠ", offset, result);
    return result;
  }
  
  private static int zzUnpackRowMap(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    } 
    return j;
  }



  
  private static final int[] ZZ_TRANS = zzUnpackTrans();

















































































































  
  private static final String`\001a\001b\003X\001Y\001c\001.\001/\001\034\004X\001d\0014\0015\001e\rX\001f\002X\001g\001h\001X\001i\001j\001k\001\030\001\031\001\032\001P\001\034\001Q\001R\001S\001 \001!\001T\001\030\001U\001l\001W\001X\001Y\001Z\001[\001\\\001]\001W\001^\001_\001m\001a\001b\003X\001Y\001c\001.\001/\001\034\004X\001d\0014\0015\001e\rX\001f\002X\001g\001h\001X\001i\001j\001k\001\030\001\031\001\032\001P\001\034\001Q\001R\001S\001 \001!\001T\001\030\001n\001o\001W\001p\001Y\001Z\001[\001\\\001]\001W\001^\001_\001\030\001a\001b\003p\001Y\001c\001.\001/\001\034\004p\001q\0014\0015\001e\rp\001f\002p\001g\001h\001p\001i\001j\001k\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001S\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001)\001*\001+\001\"\001,\003#\001$\001-\001.\001r\001\034\0010\001s\001#\001t\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\001u\001\031\001\032\001v\001\034\001w\001x\001\037\001 \001!\007u\001y\003x\001z\001M\001{\007u\001F\001|\001}\001\034\003u\001~\001u\001\001\021u\001\001\004u\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001\001\001+\001\"\001,\003#\001$\001-\001.\001/\001\034\0010\0011\001#\0012\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\026\030\001)\001\030\001/\030\001\b\030\001\007\030\001\001\030\001\003\030\001\n\030\0015\030\030\001\031\001\032\001\001\034\001w\001\030\001S\001 \001!\001\001\030\001\001\030\006\001\001\001M\001{\001\006\001F\001.\001\001\034\004\0013\0014\0015\021\001\001\004\003\001\001\002\001\001\027\001\001\001\036\001\030\001\031\001\032\001\001\034\001\001\001\037\001 \001!\001\002\030\001V\001\002\001B\001\001\001\001\001)\001\030\001 \001¡\005\001F\001.\001/\001\034\004\001¢\001£\001¤\001¥\r\001\030\002\001\001\001\001¦\001§\001¨\003©\001ª%©\001«\024©\001«\002©)\030\001«\024\030\001¬\002\030)­\001«\027­\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001)\001\030\001+\001\"\001,\003#\001$\001-\001.\001/\001\034\0010\0011\001#\0012\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\001®\001¯\001°\001±\001²\002®\001³\001´\001µ\007®\001\030\r®\001\030\001®\001\030\001²\036®\001¶\002·\001¸\003¶\001¹9¶\001\030\001\031\001\032\001º\001»\002\030\001¼\001 \001!\003½\001¾\003½\001¿\004½\001M\001«\001¾\006½\001À\001.\001/\001»\004½\001\030\002¾\021½\002\030\004½\f\000\001Á\002\000\001Á\013\000\003Á\005\000\004Á\004\000\rÁ\001\000\002Á\002\000\001Á\020\000\001Âu\000\001\031?\000\001\"\001Ã\001Ä>\"\003\000\001Å=\000\001Æ\002\000\001Ç\001Æ\001È\001É\003Æ\007È\001Æ\004È\002Æ\007È\004Æ\004È\003Æ\021È\002Æ\004È\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\001Ë\001\000\001Ì\006\"\004\000\004\"\003\000\021\"\002\000\004\"\005\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\002\000\001Ð\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\003\000\tÒ\001Ó7Ò\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\006\"\001$\001\000\004\"\002\000\002\"\001$\003\"\001$\004\000\004\"\003\000\021\"\002\000\004\"\020\000\001×\001Ø\007\000\002Ù\003\000\001×\034\000\001Ú\b\000\001Ê\001\000\001\"\001\036\003\000\007\"\001\000\002&\002\036\001Ë\001\000\001Ì\006\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\001Ë\001\000\001Ì\006\"\004\000\004\"\001Û\002\000\021\"\002\000\004\"\026\000\001Ü-\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\001Ý\006\"\003\000\001Þ\004\"\003\000\021\"\002\000\004\"\021\000\001ß\r\000\001à$\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001á\002#\001Ö\002\000\001\"\b#\001â\001#\001ã\002#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\007#\001ä\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001å\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001æ\013#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ç\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\004#\001è\b#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001é\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ê\002#\001Ö\002\000\001\"\004#\001ë\004#\001ì\003#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001í\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\n#\001î\002#\001\"\002#\002\000\001#\003\"\021\000\001ï\r\000\001ð\033\000\001ñ\026\000\001ò)\000\001ó\001ô\004\000\002\"\001õ>\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\001ö\002\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\003\"\001÷\001\"\001÷\001\"\004\000\001÷\002\"\001ø\003\000\001\"\004÷\001ù\001ú\001û\006÷\001\"\001ü\001ú\002\000\001÷\003\"\021\000\001ß2\000\001Å\t\000\001ýZ\000\001þ\020\000\001ÿC\000\001ñA\000\001Ā\t\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ā\001\000\001Ð\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\024\000\001Ă@\000\001ß\r\000\001ă$\000\001Å\t\000\001Ą3\000\002W\001ą>W'\000\001Ć\036\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ć\001\000\001ć\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï*\000\001Ĉ%\000\001ĉ\002\000\002ĉ\003\000\001Ċ\003\000\001ċ\001\000\005ĉ\004\000\004ĉ\001Ö\003\000\rĉ\001\000\002ĉ\002\000\001ĉ\006\000\001Č\001\000\002W\007\000\003W\002\000\001W\001\000\001W\004\000\005W\004\000\004W\004\000\rW\001\000\002W\002\000\001W\002\000\001W\003\000\001Č\001\000\002W\005\000\001ĉ\001\000\001W\002X\002\000\001W\001Ċ\001W\002\000\001ċ\001\000\005X\004\000\004X\001Ö\003\000\rX\001\000\002X\002\000\001X\002\000\001W\020\000\001Y\t\000\001Y\003\000\001Y3\000\001Ø\025\000\001č+\000\001Ď\024\000\001ď-\000\001Đ\022\000\001đ0\000\001ĒB\000\001ē\r\000\001Ĕ3\000\001ĕ\001Ė\002\000\001ĕ3\000\001ß\r\000\001à\007\000\001ė@\000\001Ę@\000\001ę\023\000\001Ě,\000\001ě\024\000\001Ĝ+\000\001ĝ@\000\001Ğ%\000\001ğ\002\000\002ğ\007\000\001Ġ\001\000\005ğ\004\000\004ğ\004\000\rğ\001\000\002ğ\002\000\001ğ\027\000\001ġ\022\000\001Ģ\034\000\001Č\001\000\002W\005\000\001ğ\001\000\001W\002p\002\000\001W\001\000\001W\002\000\001Ġ\001\000\005p\004\000\004p\004\000\rp\001\000\002p\002\000\001p\002\000\001W\021\000\001ģ\017\000\001Ĥ\"\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ĥ\001#\001ä\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\002#\001Ħ\003#\001å\006#\001\"\002#\002\000\001#\003\"\001u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ĩ\001ĩ\001ħ\002u\001x\013u\004x+u\001Æ\002\000\003Æ\001Ī:Æ\001u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\001ī\001\000\001Ĭ\006u\004\000\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\nu\001ĭ\024u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\030u\001Į\006u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\031u\001į\004u\026\000\001İR\000\001Ñ(\000\001\t\000\001\003\000\001\"\000\002\001ı>\003\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\003\000\021\002\000\004\003\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\001Û\002\000\021\002\000\004\001\001Ĩ\001ĳ>\005\000\003Í\004\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ć\001\000\001ć\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\003\000\002\001Ĵ>\005\000\001ĵQ\000\001Ķ\001\000\001ķ2\000\001ĸ9\000\001Ĺ\013\000\002\t\000\005\004\000\004\004\000\r\001\000\002\002\000\001\025\000\001ĺ\002\000\001ĺU\000\001ĻT\000\001ļ\025\000\001Ľ\001ľ\004\000\001Ŀ\r\000\001ŀ\031\000\003©\001ª%©\001\000\024©\001Ł\005©\001ª:©\001ł\002©)­\001\000\027­\001®\002\000\001®\001\000\f®\001\000\r®\001\000\001®\002\000\036®\001\000\001¯?\000\001®\001\034\001Ń\001®\001\000\f®\001\000\r®\001\000\001®\002\000\036®\003\000\001ń\001²\035\000\001²\036\000\001®\002\000\001®\001\000\003®\001´\001µ\007®\001\000\r®\001\000\001®\002\000\036®\001Ņ\002ņ\001Ņ\001ņ\003Ņ\001®\bŅ\001ņ\rŅ\001ņ\001Ņ\002ņ\036Ņ\001Ň\002ň\001Ň\001ň\004Ň\001®\007Ň\001ň\rŇ\001ň\001Ň\002ň\036Ň\001¶\003\000\003¶\001\0009¶\001\000\002·E\000\001ŉ>\000\003Ŋ\004\000\001ŋ\002\000\001ŋ\001Ŋ\001\000\002Ŋ\001\000\001Ŋ\001ć\001\000\001ć\002Ŋ\003ŋ\001Ŋ\004\000\004ŋ\001\000\001Ñ\002\000\rŋ\001\000\002ŋ\002\000\001ŋ\003\000\002½\001Ō>½\005\000\003ō\001 \001Î\002\000\001Ŏ\002\000\001Ŏ\001ō\001\000\002ō\001\000\001ō\001ć\001\000\001ć\002ō\003Ŏ\001ō\004\000\004Ŏ\001\000\001Ñ\002\000\rŎ\001\000\002Ŏ\002\000\001Ŏ\006\000\001ŏ\001\000\002½\003\000\007½\001\000\004½\002\000\007½\004\000\004½\003\000\021½\002\000\004½\021\000\001ØN\000\001à-\000\001Á\002\000\002Á\t\000\005Á\004\000\004Á\004\000\rÁ\001\000\002Á\002\000\001Á\003\000\001Ő\001ő\003Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\003Ő\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\003\000\001ŗ\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001Ã\001\000\001ŗ\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001\034\001Ń>\000\001Æ\002\000>Æ\001È\001\"\001õ>È\001Æ\002\000\001Ç\001Æ\002È\003Æ\007È\001Æ\004È\002Æ\007È\004Æ\004È\003Æ\021È\002Æ\004È\001Ī\001Ř\001ř\001Ś\001Ī\002É\003Ī\007É\001Ī\004É\002Ī\007É\004Ī\004É\003Ī\021É\002Ī\004É\027ś\001\000)ś\003Ŝ\001ŝ\001Ŝ\002Ş\003Ŝ\007Ş\001Ŝ\004Ş\002Ŝ\001ş\006Ş\004Ŝ\004Ş\003Ŝ\021Ş\002Ŝ\004Ş\003Î\001Š\005Î\001Ó7Î\f\000\001Ï\002\000\002Ï\t\000\005Ï\004\000\004Ï\004\000\rÏ\001\000\002Ï\002\000\001Ï\006\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\001š\002\000\021\"\002\000\004\"\003\000\001Ţ\001\000\002\"\001ţ\002\000\004\"\002Ť\001ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\002ť\003Ť\001ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\026\000\001Ŧ:\000\001×\t\000\001×\003\000\001×]\000\001ŧ\033\000\001Ũ-\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\003\000\001ũ\004\"\003\000\021\"\002\000\004\"\r\000\001Ū6\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\002#\001ū\001#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001Ŭ\013#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ŭ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001Ů\002#\001Ö\002\000\001\"\002#\001ů\n#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\002#\001Ű\n#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001ű\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001Ų\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001ų\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\b#\001Ŵ\004#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ŵ\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001Ŷ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ŷ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ÿ\001Ź\t\000\002ź\003\000\001ź\001\000\001ź\005\000\003ź\004\000\001Ź\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\003\000\001Ż\001ż\t\000\002Ž\003\000\001Ž\001\000\001Ž\005\000\003Ž\004\000\001ż\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\031\000\001ž\"\000\001ſ\005\000\001\"\001\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\b\"\001÷\006\"\001÷\001\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\001÷\003\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\001÷\002\"\001÷\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\017\"\001÷\001\"\002\000\004\"\031\000\001ž4\000\001ƀ4\000\001W\001\000\001Č\001\000\002W\007\000\003W\002\000\001W\001\000\001W\004\000\005W\004\000\004W\004\000\rW\001\000\002W\002\000\001W\002\000\001W'\000\001š\034\000\001Ɓ\003\000\001ţ\006\000\002Ƃ\001ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\002ƃ\003Ƃ\001ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\004\000\001Ƅ\013\000\001ƅ\b\000\001Ɔ\001Ƈ\003\000\001ƅ\003\000\001Ƅ8\000\001ĕ\003\000\001ĕ2\000\001ƈ\t\000\001ƈ\001\000\003ƈ\007\000\001ƈ\004\000\002ƈ\001\000\001ƈ\003\000\001ƈ5\000\001Ɖ2\000\001ž\r\000\001Ɗ@\000\001Ģ/\000\001Ƌ;\000\001ƌ2\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001ƍ\013#\001\"\002#\002\000\001#\003\"\001u\001Ǝ\001Ə\001ħ\002u\001x\013u\004x+u\003\000\001Ɛ=\000\001u\001Ĩ\001\000\001Ƒ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\001Ī\001Ř\001ř>Ī\027ƒ\001\000)ƒ\001u\002Ɠ\001ħ\001Ɠ\001u\001x\003Ɠ\bu\004x\002Ɠ\001Ɣ\006u\004Ɠ\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\tu\001ƕ\025u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\001u\001Ɩ\005u\004\000\036u\001\000\001\001\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\003\000\021\002\000\004\001\000\001Ĩ\001\000\001Ɛ>\000\001\001\000\001Ĺ\013\000\002\t\000\005\004\000\004\004\000\r\001\000\002\002\000\001\003\000\027Ɨ\001\000)Ɨ\030Ƙ\001ƙ(Ƙ\001\000\001\034\001\000\001Å>\000\001²\001ƚ>\000\001Ņ\002ņ\001Ņ\001ņ\003Ņ\001ƛ\bŅ\001ņ\rŅ\001ņ\001Ņ\002ņ\036Ņ\bņ\001Ɯ8ņ\001Ň\002ň\001Ň\001ň\004Ň\001Ɲ\007Ň\001ň\rŇ\001ň\001Ň\002ň\036Ň\tň\001ƞ7ň\f\000\001ŋ\002\000\002ŋ\t\000\005ŋ\004\000\004ŋ\004\000\rŋ\001\000\002ŋ\002\000\001ŋ\004\000\001½\001\000\001ŏ\001\000\002½\003\000\007½\001\000\004½\002\000\007½\004\000\004½\003\000\021½\002\000\004½\f\000\001Ŏ\002\000\002Ŏ\t\000\005Ŏ\004\000\004Ŏ\004\000\rŎ\001\000\002Ŏ\002\000\001Ŏ\006\000\001Ɵ?\000\001Ő\001Ɵ=\000\001Ő\001ő\001Ő\001ŕ\001Ő\002Ơ\001ŕ\006Ő\002ŕ\001Ơ\002Ő\001ŕ\001Ő\001ŕ\004Ő\001Ơ\003ŕ\001Ơ\004Ő\004ŕ\004Ő\rŕ\001Ő\002ŕ\002Ő\001ŕ\002Ő\001ŕ\003\000\001Ɵ\003\000\001Ɵ<\000\001Ɵ\003\000\001Ɵ\004\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\003\000\001Ő\001ő\001Ő\001ŕ\001Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001Ő\001ő\001Ő\001ŕ\001Ő\002Œ\001Ŗ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001\000\001Ř?\000\001É\001Ƥ\001ƥ>É\027ś\001Ʀ)ś\r\000\001Ƨ3\000\002\"\001õ\n\"\001ƨ3\"\003\000\001Ê\001\000\002\"\003\000\003\"\001ƨ\003\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003Ŝ\001ŝ\001Ŝ\002Ş\003Ŝ\003Ş\001ƨ\003Ş\001Ŝ\004Ş\002Ŝ\007Ş\004Ŝ\004Ş\003Ŝ\021Ş\002Ŝ\004Ş\003Î\001Š\005Î\001Ʃ7Î\026\000\001ƪ*\000\002Ť\001ƫ>Ť\005\000\003ƃ\004\000\001Ƭ\002\000\001Ƭ\001ƃ\001\000\002ƃ\001\000\001ƃ\003\000\002ƃ\003Ƭ\001ƃ\004\000\004Ƭ\004\000\rƬ\001\000\002Ƭ\002\000\001Ƭ\006\000\001Ţ\001\000\002Ť\001ţ\002\000\003\"\001ƭ\003Ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\001ť\005Ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ţ\001\000\002\"\001ţ\002\000\003\"\001ƭ\002Ť\001ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\002ť\003Ť\001ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ʈ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\f#\001Ư\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ư\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\007#\001Ʊ\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ʋ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ƴ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ƴ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ƶ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001ƶ\f#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001Ʒ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001Ƹ\006#\001\"\002#\002\000\001#\003\"\002ź\001ƹ>ź\003\000\001ƺ@\000\001Ÿ\001\000\002ź\007\000\003ź\002\000\001ź\001\000\001ź\004\000\005ź\004\000\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\002Ž\001ƻ>Ž\003\000\001Ƽ@\000\001Ż\001\000\002Ž\007\000\003Ž\002\000\001Ž\001\000\001Ž\004\000\005Ž\004\000\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\002Ƃ\001ƽ>Ƃ\003\000\001Ɓ\001\000\002Ƃ\001ţ\005\000\001ƾ\003Ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005Ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\003\000\001Ɓ\003\000\001ţ\005\000\001ƾ\002Ƃ\001ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\002ƃ\003Ƃ\001ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\020\000\001ƅ\t\000\001ƅ\003\000\001ƅ<\000\001ƿ\001ǀ\002\000\001ƿ%\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001ǁ\f#\001\"\002#\002\000\001#\003\"\001u\002\000\001ǂ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ǝ\001\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\001\000\001Ĩ\001ǃ>\000\001u\001Ǆ\001ǅ\001ħ\002u\001x\013u\004x+u\027ƒ\001u)ƒ\r\000\001ǆ3\000\001u\002Ɠ\001ħ\001Ɠ\001u\001x\003Ɠ\bu\004x\002Ɠ\007u\004Ɠ\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\bu\001Ǉ\025u\027Ɨ\001ǈ)Ɨ\r\000\001ǉ3\000\rƘ\001ǉ3Ƙ\001\000\001²\001\000\001ń\001²\035\000\001²\036\000\001®\002\000\001®\001\000\002®\001Ǌ\001´\b®\001\000\r®\001\000\001®\002\000\036®\007\000\001ǋ\001ǌ8\000\001®\002\000\001®\001\000\002®\001Ǎ\001®\001µ\007®\001\000\r®\001\000\001®\002\000\036®\007\000\001ǎ\001\000\001Ǐ7\000\001Ő\001ő\003Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001Ő\001ő\001Ő\001ŕ\001Ő\002Ơ\007Ő\002ŕ\001Ơ\002Ő\001ŕ\001Ő\001ŕ\004Ő\001Ơ\003ŕ\001Ơ\004Ő\004ŕ\004Ő\rŕ\001Ő\002ŕ\002Ő\001ŕ\002Ő\001ŕ\007\000\001Ɵ\004\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\017\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\004\000\001Ƥ\001\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\006\000\001ǐ\013\000\002Ǒ\002ǐ8\000\001ǒ6\000\001Ê\001\000\002\"\003\000\003\"\001Ǔ\003\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001Ť\001\000\001Ţ\001\000\002Ť\001ţ\002\000\003\"\001ƭ\003Ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\001ť\005Ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ɓ\003\000\001ţ\004\000\001Ƭ\001ƾ\001Ƃ\001ǔ\001Ƭ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\001Ƭ\003ǔ\001Ƭ\004\000\004ǔ\004\000\rǔ\001\000\002ǔ\002\000\001ǔ\002\000\001Ƃ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001Ǖ\f#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001ǖ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001Ǘ\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ǘ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\001\000\001ź\001\000\001Ÿ\001\000\002ź\007\000\003ź\002\000\001ź\001\000\001ź\004\000\005ź\004\000\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\001\000\001Ź\001Ǚ?\000\001Ž\001\000\001Ż\001\000\002Ž\007\000\003Ž\002\000\001Ž\001\000\001Ž\004\000\005Ž\004\000\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\001\000\001ż\001ǚ?\000\001Ƃ\001\000\001Ɓ\001\000\002Ƃ\001ţ\005\000\001ƾ\003Ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005Ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\032\000\001ƿ\003\000\001ƿ2\000\001Ǜ\t\000\001Ǜ\001\000\003Ǜ\007\000\001Ǜ\004\000\002Ǜ\001\000\001Ǜ\003\000\001Ǜ\016\000\001u\001\000\001u\001ħ\002u\001x\013u\004x,u\002\000\001ǜ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ǆ\001\000\001Ƒ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\r\000\001u9\000\001ǝ\013\000\004ǝ8\000\001Ǟ3\000\001®\002\000\001®\001\000\003®\001´\b®\001\000\r®\001\000\001®\002\000\036®\b\000\001ǌ8\000\bņ\001\0008ņ\001®\002\000\001®\001\000\004®\001µ\007®\001\000\r®\001\000\001®\002\000\036®\t\000\001Ǐ7\000\tň\001\0007ň\026\000\001Ë\001\000\001ǟ.\000\001ǐ\013\000\002Ǒ\002ǐ\001Ë\001\000\001ǟ.\000\001ǐ\006\000\001ǒ\004\000\002Ǒ\002ǐ.\000\001Ê\001\000\001\"\001\036\003\000\003\"\001Ǔ\003\"\001\000\002&\002\036\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ɓ\001\000\002Ƃ\001ţ\004\000\001Ƭ\001ƾ\001Ƃ\002ǔ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005ǔ\004\000\004ǔ\004\000\rǔ\001\000\002ǔ\002\000\001ǔ\002\000\001Ƃ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001Ǡ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ǡ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\001\000\001Ź\001\000\001ƺ>\000\001ż\001\000\001ƼC\000\001ǝ\006\000\001Ǟ\004\000\004ǝ+\000\030Ŝ\001Ǣ(Ŝ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\004#\001ǣ\b#\001\"\002#\002\000\001#\003\"\rŜ\001Ƨ3Ŝ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001Ǥ\007#\001\"\002#\002\000\001#\003\"";

















































































































  
  private static final int ZZ_UNKNOWN_ERROR = 0;

















































































































  
  private static final int ZZ_NO_MATCH = 1;

















































































































  
  private static final int ZZ_PUSHBACK_2BIG = 2;


















































































































  
  private static int[] zzUnpackTrans() {
    int[] result = new int[20540];
    int offset = 0;
    offset = zzUnpackTrans`\001a\001b\003X\001Y\001c\001.\001/\001\034\004X\001d\0014\0015\001e\rX\001f\002X\001g\001h\001X\001i\001j\001k\001\030\001\031\001\032\001P\001\034\001Q\001R\001S\001 \001!\001T\001\030\001U\001l\001W\001X\001Y\001Z\001[\001\\\001]\001W\001^\001_\001m\001a\001b\003X\001Y\001c\001.\001/\001\034\004X\001d\0014\0015\001e\rX\001f\002X\001g\001h\001X\001i\001j\001k\001\030\001\031\001\032\001P\001\034\001Q\001R\001S\001 \001!\001T\001\030\001n\001o\001W\001p\001Y\001Z\001[\001\\\001]\001W\001^\001_\001\030\001a\001b\003p\001Y\001c\001.\001/\001\034\004p\001q\0014\0015\001e\rp\001f\002p\001g\001h\001p\001i\001j\001k\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001S\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001)\001*\001+\001\"\001,\003#\001$\001-\001.\001r\001\034\0010\001s\001#\001t\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\001u\001\031\001\032\001v\001\034\001w\001x\001\037\001 \001!\007u\001y\003x\001z\001M\001{\007u\001F\001|\001}\001\034\003u\001~\001u\001\001\021u\001\001\004u\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001\001\001+\001\"\001,\003#\001$\001-\001.\001/\001\034\0010\0011\001#\0012\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\026\030\001)\001\030\001/\030\001\b\030\001\007\030\001\001\030\001\003\030\001\n\030\0015\030\030\001\031\001\032\001\001\034\001w\001\030\001S\001 \001!\001\001\030\001\001\030\006\001\001\001M\001{\001\006\001F\001.\001\001\034\004\0013\0014\0015\021\001\001\004\003\001\001\002\001\001\027\001\001\001\036\001\030\001\031\001\032\001\001\034\001\001\001\037\001 \001!\001\002\030\001V\001\002\001B\001\001\001\001\001)\001\030\001 \001¡\005\001F\001.\001/\001\034\004\001¢\001£\001¤\001¥\r\001\030\002\001\001\001\001¦\001§\001¨\003©\001ª%©\001«\024©\001«\002©)\030\001«\024\030\001¬\002\030)­\001«\027­\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\037\001 \001!\002\"\001#\002\"\001#\001$\001%\002&\001'\001(\001)\001\030\001+\001\"\001,\003#\001$\001-\001.\001/\001\034\0010\0011\001#\0012\0013\0014\0015\001\"\0016\001#\0017\0018\002#\0019\001:\001#\001;\001#\001<\001#\001\"\002#\001=\001>\001#\003\"\001®\001¯\001°\001±\001²\002®\001³\001´\001µ\007®\001\030\r®\001\030\001®\001\030\001²\036®\001¶\002·\001¸\003¶\001¹9¶\001\030\001\031\001\032\001º\001»\002\030\001¼\001 \001!\003½\001¾\003½\001¿\004½\001M\001«\001¾\006½\001À\001.\001/\001»\004½\001\030\002¾\021½\002\030\004½\f\000\001Á\002\000\001Á\013\000\003Á\005\000\004Á\004\000\rÁ\001\000\002Á\002\000\001Á\020\000\001Âu\000\001\031?\000\001\"\001Ã\001Ä>\"\003\000\001Å=\000\001Æ\002\000\001Ç\001Æ\001È\001É\003Æ\007È\001Æ\004È\002Æ\007È\004Æ\004È\003Æ\021È\002Æ\004È\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\001Ë\001\000\001Ì\006\"\004\000\004\"\003\000\021\"\002\000\004\"\005\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\002\000\001Ð\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\003\000\tÒ\001Ó7Ò\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\006\"\001$\001\000\004\"\002\000\002\"\001$\003\"\001$\004\000\004\"\003\000\021\"\002\000\004\"\020\000\001×\001Ø\007\000\002Ù\003\000\001×\034\000\001Ú\b\000\001Ê\001\000\001\"\001\036\003\000\007\"\001\000\002&\002\036\001Ë\001\000\001Ì\006\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\001Ë\001\000\001Ì\006\"\004\000\004\"\001Û\002\000\021\"\002\000\004\"\026\000\001Ü-\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\001Ý\006\"\003\000\001Þ\004\"\003\000\021\"\002\000\004\"\021\000\001ß\r\000\001à$\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001á\002#\001Ö\002\000\001\"\b#\001â\001#\001ã\002#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\007#\001ä\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001å\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001æ\013#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ç\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\004#\001è\b#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001é\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ê\002#\001Ö\002\000\001\"\004#\001ë\004#\001ì\003#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001í\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\n#\001î\002#\001\"\002#\002\000\001#\003\"\021\000\001ï\r\000\001ð\033\000\001ñ\026\000\001ò)\000\001ó\001ô\004\000\002\"\001õ>\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\001ö\002\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\003\"\001÷\001\"\001÷\001\"\004\000\001÷\002\"\001ø\003\000\001\"\004÷\001ù\001ú\001û\006÷\001\"\001ü\001ú\002\000\001÷\003\"\021\000\001ß2\000\001Å\t\000\001ýZ\000\001þ\020\000\001ÿC\000\001ñA\000\001Ā\t\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ā\001\000\001Ð\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\024\000\001Ă@\000\001ß\r\000\001ă$\000\001Å\t\000\001Ą3\000\002W\001ą>W'\000\001Ć\036\000\003Í\001 \001Î\002\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ć\001\000\001ć\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï*\000\001Ĉ%\000\001ĉ\002\000\002ĉ\003\000\001Ċ\003\000\001ċ\001\000\005ĉ\004\000\004ĉ\001Ö\003\000\rĉ\001\000\002ĉ\002\000\001ĉ\006\000\001Č\001\000\002W\007\000\003W\002\000\001W\001\000\001W\004\000\005W\004\000\004W\004\000\rW\001\000\002W\002\000\001W\002\000\001W\003\000\001Č\001\000\002W\005\000\001ĉ\001\000\001W\002X\002\000\001W\001Ċ\001W\002\000\001ċ\001\000\005X\004\000\004X\001Ö\003\000\rX\001\000\002X\002\000\001X\002\000\001W\020\000\001Y\t\000\001Y\003\000\001Y3\000\001Ø\025\000\001č+\000\001Ď\024\000\001ď-\000\001Đ\022\000\001đ0\000\001ĒB\000\001ē\r\000\001Ĕ3\000\001ĕ\001Ė\002\000\001ĕ3\000\001ß\r\000\001à\007\000\001ė@\000\001Ę@\000\001ę\023\000\001Ě,\000\001ě\024\000\001Ĝ+\000\001ĝ@\000\001Ğ%\000\001ğ\002\000\002ğ\007\000\001Ġ\001\000\005ğ\004\000\004ğ\004\000\rğ\001\000\002ğ\002\000\001ğ\027\000\001ġ\022\000\001Ģ\034\000\001Č\001\000\002W\005\000\001ğ\001\000\001W\002p\002\000\001W\001\000\001W\002\000\001Ġ\001\000\005p\004\000\004p\004\000\rp\001\000\002p\002\000\001p\002\000\001W\021\000\001ģ\017\000\001Ĥ\"\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ĥ\001#\001ä\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\002#\001Ħ\003#\001å\006#\001\"\002#\002\000\001#\003\"\001u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ĩ\001ĩ\001ħ\002u\001x\013u\004x+u\001Æ\002\000\003Æ\001Ī:Æ\001u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\001ī\001\000\001Ĭ\006u\004\000\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\nu\001ĭ\024u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\030u\001Į\006u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\031u\001į\004u\026\000\001İR\000\001Ñ(\000\001\t\000\001\003\000\001\"\000\002\001ı>\003\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\003\000\021\002\000\004\003\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\001Û\002\000\021\002\000\004\001\001Ĩ\001ĳ>\005\000\003Í\004\000\001Ï\002\000\001Ï\001Í\001\000\002Í\001\000\001Í\001ć\001\000\001ć\002Í\003Ï\001Í\004\000\004Ï\001\000\001Ñ\002\000\rÏ\001\000\002Ï\002\000\001Ï\003\000\002\001Ĵ>\005\000\001ĵQ\000\001Ķ\001\000\001ķ2\000\001ĸ9\000\001Ĺ\013\000\002\t\000\005\004\000\004\004\000\r\001\000\002\002\000\001\025\000\001ĺ\002\000\001ĺU\000\001ĻT\000\001ļ\025\000\001Ľ\001ľ\004\000\001Ŀ\r\000\001ŀ\031\000\003©\001ª%©\001\000\024©\001Ł\005©\001ª:©\001ł\002©)­\001\000\027­\001®\002\000\001®\001\000\f®\001\000\r®\001\000\001®\002\000\036®\001\000\001¯?\000\001®\001\034\001Ń\001®\001\000\f®\001\000\r®\001\000\001®\002\000\036®\003\000\001ń\001²\035\000\001²\036\000\001®\002\000\001®\001\000\003®\001´\001µ\007®\001\000\r®\001\000\001®\002\000\036®\001Ņ\002ņ\001Ņ\001ņ\003Ņ\001®\bŅ\001ņ\rŅ\001ņ\001Ņ\002ņ\036Ņ\001Ň\002ň\001Ň\001ň\004Ň\001®\007Ň\001ň\rŇ\001ň\001Ň\002ň\036Ň\001¶\003\000\003¶\001\0009¶\001\000\002·E\000\001ŉ>\000\003Ŋ\004\000\001ŋ\002\000\001ŋ\001Ŋ\001\000\002Ŋ\001\000\001Ŋ\001ć\001\000\001ć\002Ŋ\003ŋ\001Ŋ\004\000\004ŋ\001\000\001Ñ\002\000\rŋ\001\000\002ŋ\002\000\001ŋ\003\000\002½\001Ō>½\005\000\003ō\001 \001Î\002\000\001Ŏ\002\000\001Ŏ\001ō\001\000\002ō\001\000\001ō\001ć\001\000\001ć\002ō\003Ŏ\001ō\004\000\004Ŏ\001\000\001Ñ\002\000\rŎ\001\000\002Ŏ\002\000\001Ŏ\006\000\001ŏ\001\000\002½\003\000\007½\001\000\004½\002\000\007½\004\000\004½\003\000\021½\002\000\004½\021\000\001ØN\000\001à-\000\001Á\002\000\002Á\t\000\005Á\004\000\004Á\004\000\rÁ\001\000\002Á\002\000\001Á\003\000\001Ő\001ő\003Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\003Ő\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\003\000\001ŗ\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001Ã\001\000\001ŗ\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001\034\001Ń>\000\001Æ\002\000>Æ\001È\001\"\001õ>È\001Æ\002\000\001Ç\001Æ\002È\003Æ\007È\001Æ\004È\002Æ\007È\004Æ\004È\003Æ\021È\002Æ\004È\001Ī\001Ř\001ř\001Ś\001Ī\002É\003Ī\007É\001Ī\004É\002Ī\007É\004Ī\004É\003Ī\021É\002Ī\004É\027ś\001\000)ś\003Ŝ\001ŝ\001Ŝ\002Ş\003Ŝ\007Ş\001Ŝ\004Ş\002Ŝ\001ş\006Ş\004Ŝ\004Ş\003Ŝ\021Ş\002Ŝ\004Ş\003Î\001Š\005Î\001Ó7Î\f\000\001Ï\002\000\002Ï\t\000\005Ï\004\000\004Ï\004\000\rÏ\001\000\002Ï\002\000\001Ï\006\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\001š\002\000\021\"\002\000\004\"\003\000\001Ţ\001\000\002\"\001ţ\002\000\004\"\002Ť\001ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\002ť\003Ť\001ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\026\000\001Ŧ:\000\001×\t\000\001×\003\000\001×]\000\001ŧ\033\000\001Ũ-\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\003\000\001ũ\004\"\003\000\021\"\002\000\004\"\r\000\001Ū6\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\002#\001ū\001#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001Ŭ\013#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ŭ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001Ů\002#\001Ö\002\000\001\"\002#\001ů\n#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\002#\001Ű\n#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001ű\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001Ų\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001ų\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\b#\001Ŵ\004#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ŵ\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001Ŷ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ŷ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ÿ\001Ź\t\000\002ź\003\000\001ź\001\000\001ź\005\000\003ź\004\000\001Ź\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\003\000\001Ż\001ż\t\000\002Ž\003\000\001Ž\001\000\001Ž\005\000\003Ž\004\000\001ż\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\031\000\001ž\"\000\001ſ\005\000\001\"\001\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\b\"\001÷\006\"\001÷\001\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\001÷\003\"\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\001÷\002\"\001÷\003\000\021\"\002\000\004\"\003\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\017\"\001÷\001\"\002\000\004\"\031\000\001ž4\000\001ƀ4\000\001W\001\000\001Č\001\000\002W\007\000\003W\002\000\001W\001\000\001W\004\000\005W\004\000\004W\004\000\rW\001\000\002W\002\000\001W\002\000\001W'\000\001š\034\000\001Ɓ\003\000\001ţ\006\000\002Ƃ\001ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\002ƃ\003Ƃ\001ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\004\000\001Ƅ\013\000\001ƅ\b\000\001Ɔ\001Ƈ\003\000\001ƅ\003\000\001Ƅ8\000\001ĕ\003\000\001ĕ2\000\001ƈ\t\000\001ƈ\001\000\003ƈ\007\000\001ƈ\004\000\002ƈ\001\000\001ƈ\003\000\001ƈ5\000\001Ɖ2\000\001ž\r\000\001Ɗ@\000\001Ģ/\000\001Ƌ;\000\001ƌ2\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001#\001ƍ\013#\001\"\002#\002\000\001#\003\"\001u\001Ǝ\001Ə\001ħ\002u\001x\013u\004x+u\003\000\001Ɛ=\000\001u\001Ĩ\001\000\001Ƒ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\001Ī\001Ř\001ř>Ī\027ƒ\001\000)ƒ\001u\002Ɠ\001ħ\001Ɠ\001u\001x\003Ɠ\bu\004x\002Ɠ\001Ɣ\006u\004Ɠ\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\tu\001ƕ\025u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\001u\001Ɩ\005u\004\000\036u\001\000\001\001\000\001Ĳ\001\000\003\002\000\001\001\000\001\001\000\b\003\000\006\002\000\001\001\000\004\003\000\021\002\000\004\001\000\001Ĩ\001\000\001Ɛ>\000\001\001\000\001Ĺ\013\000\002\t\000\005\004\000\004\004\000\r\001\000\002\002\000\001\003\000\027Ɨ\001\000)Ɨ\030Ƙ\001ƙ(Ƙ\001\000\001\034\001\000\001Å>\000\001²\001ƚ>\000\001Ņ\002ņ\001Ņ\001ņ\003Ņ\001ƛ\bŅ\001ņ\rŅ\001ņ\001Ņ\002ņ\036Ņ\bņ\001Ɯ8ņ\001Ň\002ň\001Ň\001ň\004Ň\001Ɲ\007Ň\001ň\rŇ\001ň\001Ň\002ň\036Ň\tň\001ƞ7ň\f\000\001ŋ\002\000\002ŋ\t\000\005ŋ\004\000\004ŋ\004\000\rŋ\001\000\002ŋ\002\000\001ŋ\004\000\001½\001\000\001ŏ\001\000\002½\003\000\007½\001\000\004½\002\000\007½\004\000\004½\003\000\021½\002\000\004½\f\000\001Ŏ\002\000\002Ŏ\t\000\005Ŏ\004\000\004Ŏ\004\000\rŎ\001\000\002Ŏ\002\000\001Ŏ\006\000\001Ɵ?\000\001Ő\001Ɵ=\000\001Ő\001ő\001Ő\001ŕ\001Ő\002Ơ\001ŕ\006Ő\002ŕ\001Ơ\002Ő\001ŕ\001Ő\001ŕ\004Ő\001Ơ\003ŕ\001Ơ\004Ő\004ŕ\004Ő\rŕ\001Ő\002ŕ\002Ő\001ŕ\002Ő\001ŕ\003\000\001Ɵ\003\000\001Ɵ<\000\001Ɵ\003\000\001Ɵ\004\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\003\000\001Ő\001ő\001Ő\001ŕ\001Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001Ő\001ő\001Ő\001ŕ\001Ő\002Œ\001Ŗ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001\000\001Ř?\000\001É\001Ƥ\001ƥ>É\027ś\001Ʀ)ś\r\000\001Ƨ3\000\002\"\001õ\n\"\001ƨ3\"\003\000\001Ê\001\000\002\"\003\000\003\"\001ƨ\003\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003Ŝ\001ŝ\001Ŝ\002Ş\003Ŝ\003Ş\001ƨ\003Ş\001Ŝ\004Ş\002Ŝ\007Ş\004Ŝ\004Ş\003Ŝ\021Ş\002Ŝ\004Ş\003Î\001Š\005Î\001Ʃ7Î\026\000\001ƪ*\000\002Ť\001ƫ>Ť\005\000\003ƃ\004\000\001Ƭ\002\000\001Ƭ\001ƃ\001\000\002ƃ\001\000\001ƃ\003\000\002ƃ\003Ƭ\001ƃ\004\000\004Ƭ\004\000\rƬ\001\000\002Ƭ\002\000\001Ƭ\006\000\001Ţ\001\000\002Ť\001ţ\002\000\003\"\001ƭ\003Ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\001ť\005Ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ţ\001\000\002\"\001ţ\002\000\003\"\001ƭ\002Ť\001ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\002ť\003Ť\001ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ʈ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\f#\001Ư\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001ư\007#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\007#\001Ʊ\005#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ʋ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ƴ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ƴ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001Ƶ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001ƶ\f#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001Ʒ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001Ƹ\006#\001\"\002#\002\000\001#\003\"\002ź\001ƹ>ź\003\000\001ƺ@\000\001Ÿ\001\000\002ź\007\000\003ź\002\000\001ź\001\000\001ź\004\000\005ź\004\000\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\002Ž\001ƻ>Ž\003\000\001Ƽ@\000\001Ż\001\000\002Ž\007\000\003Ž\002\000\001Ž\001\000\001Ž\004\000\005Ž\004\000\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\002Ƃ\001ƽ>Ƃ\003\000\001Ɓ\001\000\002Ƃ\001ţ\005\000\001ƾ\003Ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005Ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\003\000\001Ɓ\003\000\001ţ\005\000\001ƾ\002Ƃ\001ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\002ƃ\003Ƃ\001ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\020\000\001ƅ\t\000\001ƅ\003\000\001ƅ<\000\001ƿ\001ǀ\002\000\001ƿ%\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001ǁ\f#\001\"\002#\002\000\001#\003\"\001u\002\000\001ǂ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ǝ\001\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\001\000\001Ĩ\001ǃ>\000\001u\001Ǆ\001ǅ\001ħ\002u\001x\013u\004x+u\027ƒ\001u)ƒ\r\000\001ǆ3\000\001u\002Ɠ\001ħ\001Ɠ\001u\001x\003Ɠ\bu\004x\002Ɠ\007u\004Ɠ\037u\002\000\001ħ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\bu\001Ǉ\025u\027Ɨ\001ǈ)Ɨ\r\000\001ǉ3\000\rƘ\001ǉ3Ƙ\001\000\001²\001\000\001ń\001²\035\000\001²\036\000\001®\002\000\001®\001\000\002®\001Ǌ\001´\b®\001\000\r®\001\000\001®\002\000\036®\007\000\001ǋ\001ǌ8\000\001®\002\000\001®\001\000\002®\001Ǎ\001®\001µ\007®\001\000\r®\001\000\001®\002\000\036®\007\000\001ǎ\001\000\001Ǐ7\000\001Ő\001ő\003Ő\002Œ\001œ\004Ő\001Ŕ\001Ő\001ŕ\002Ŗ\001Ő\002Ŗ\001ŕ\001Ŗ\002Ő\001ƣ\006Ŗ\004Ő\004Ŗ\004Ő\rŖ\001Ő\002Ŗ\002Ő\001Ŗ\002Ő\001ŕ\001Ő\001ő\001Ő\001ŕ\001Ő\002Ơ\007Ő\002ŕ\001Ơ\002Ő\001ŕ\001Ő\001ŕ\004Ő\001Ơ\003ŕ\001Ơ\004Ő\004ŕ\004Ő\rŕ\001Ő\002ŕ\002Ő\001ŕ\002Ő\001ŕ\007\000\001Ɵ\004\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\017\000\001ơ\002\000\001ơ\001Ƣ\t\000\001Ƣ\003ơ\001Ƣ\004\000\004ơ\004\000\rơ\001\000\002ơ\002\000\001ơ\004\000\001Ƥ\001\000\001Ê\001\000\002\"\003\000\007\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\006\000\001ǐ\013\000\002Ǒ\002ǐ8\000\001ǒ6\000\001Ê\001\000\002\"\003\000\003\"\001Ǔ\003\"\001\000\004\"\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\001\000\001Ť\001\000\001Ţ\001\000\002Ť\001ţ\002\000\003\"\001ƭ\003Ť\001\000\001ť\001Ť\001ť\001Ť\002\000\001\"\001ť\005Ť\004\000\004Ť\003\000\001\"\rŤ\001\"\002Ť\002\000\001Ť\002\"\001Ť\003\000\001Ɓ\003\000\001ţ\004\000\001Ƭ\001ƾ\001Ƃ\001ǔ\001Ƭ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\001Ƭ\003ǔ\001Ƭ\004\000\004ǔ\004\000\rǔ\001\000\002ǔ\002\000\001ǔ\002\000\001Ƃ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\001Ǖ\f#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001ǖ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\006#\001Ǘ\006#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\003#\001ǘ\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\001\000\001ź\001\000\001Ÿ\001\000\002ź\007\000\003ź\002\000\001ź\001\000\001ź\004\000\005ź\004\000\004ź\004\000\rź\001\000\002ź\002\000\001ź\002\000\001ź\001\000\001Ź\001Ǚ?\000\001Ž\001\000\001Ż\001\000\002Ž\007\000\003Ž\002\000\001Ž\001\000\001Ž\004\000\005Ž\004\000\004Ž\004\000\rŽ\001\000\002Ž\002\000\001Ž\002\000\001Ž\001\000\001ż\001ǚ?\000\001Ƃ\001\000\001Ɓ\001\000\002Ƃ\001ţ\005\000\001ƾ\003Ƃ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005Ƃ\004\000\004Ƃ\004\000\rƂ\001\000\002Ƃ\002\000\001Ƃ\002\000\001Ƃ\032\000\001ƿ\003\000\001ƿ2\000\001Ǜ\t\000\001Ǜ\001\000\003Ǜ\007\000\001Ǜ\004\000\002Ǜ\001\000\001Ǜ\003\000\001Ǜ\016\000\001u\001\000\001u\001ħ\002u\001x\013u\004x,u\002\000\001ǜ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\037u\001Ǆ\001\000\001Ƒ\001\000\001u\001x\003\000\bu\004x\002\000\007u\004\000\036u\r\000\001u9\000\001ǝ\013\000\004ǝ8\000\001Ǟ3\000\001®\002\000\001®\001\000\003®\001´\b®\001\000\r®\001\000\001®\002\000\036®\b\000\001ǌ8\000\bņ\001\0008ņ\001®\002\000\001®\001\000\004®\001µ\007®\001\000\r®\001\000\001®\002\000\036®\t\000\001Ǐ7\000\tň\001\0007ň\026\000\001Ë\001\000\001ǟ.\000\001ǐ\013\000\002Ǒ\002ǐ\001Ë\001\000\001ǟ.\000\001ǐ\006\000\001ǒ\004\000\002Ǒ\002ǐ.\000\001Ê\001\000\001\"\001\036\003\000\003\"\001Ǔ\003\"\001\000\002&\002\036\002\000\007\"\004\000\004\"\003\000\021\"\002\000\004\"\003\000\001Ɓ\001\000\002Ƃ\001ţ\004\000\001Ƭ\001ƾ\001Ƃ\002ǔ\001\000\001ƃ\001Ƃ\001ƃ\001Ƃ\003\000\001ƃ\005ǔ\004\000\004ǔ\004\000\rǔ\001\000\002ǔ\002\000\001ǔ\002\000\001Ƃ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001Ǡ\003#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\001#\001ǡ\002#\001Ö\002\000\001\"\r#\001\"\002#\002\000\001#\003\"\001\000\001Ź\001\000\001ƺ>\000\001ż\001\000\001ƼC\000\001ǝ\006\000\001Ǟ\004\000\004ǝ+\000\030Ŝ\001Ǣ(Ŝ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\004#\001ǣ\b#\001\"\002#\002\000\001#\003\"\rŜ\001Ƨ3Ŝ\003\000\001Ê\001\000\002\"\003\000\002\"\001#\002\"\002#\001\000\002\"\001Ô\001\"\002\000\001Õ\001\"\005#\004\000\004#\001Ö\002\000\001\"\005#\001Ǥ\007#\001\"\002#\002\000\001#\003\"", offset, result);
    return result;
  }
  
  private static int zzUnpackTrans(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--; while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }







  
  private static final String[] ZZ_ERROR_MSG = new String[] { "Unknown internal scanner error", "Error: could not match input", "Error: pushback value was too large" };







  
  private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();





  
  private static final String ZZ_ATTRIBUTE_PACKED_0 = "\027\000\002\t\006\001\001\t\t\001\001\t\003\001\002\t\003\001\003\t\f\001\001\t\n\001\001\t\003\001\001\t\004\001\001\t\007\001\001\t\001\001\001\t\004\001\002\t\005\001\002\t\r\001\001\t\b\001\002\t\002\001\002\t\003\001\001\t\002\001\001\t\003\001\002\t\004\001\001\t\006\001\004\t\002\001\001\t\003\001\002\t\002\001\001\t\013\001\001\t\002\001\001\t\003\001\001\000\002\001\001\000\004\001\002\000\001\001\001\t\001\000\001\001\002\t\001\000\001\t\004\001\002\t\001\001\001\t\003\001\002\t\016\001\001\000\002\t\001\000\001\t\002\001\001\t\006\001\003\t\001\001\003\t\001\000\001\001\003\t\002\000\001\001\001\000\006\t\001\001\001\t\001\001\001\000\003\t\001\001\001\t\001\001\002\t\001\000\001\t\002\000\001\t\007\001\001\000\004\001\001\t\001\001\001\000\002\001\001\t\002\000\001\t\001\000\b\t\002\001\001\000\001\001\001\000\001\001\001\000\002\t\002\001\001\t\001\001\t\000\001\t\002\001\003\000\002\001\001\000\001\001\002\000\002\001\005\t\r\001\001\000\002\001\001\000\002\001\003\t\004\000\001\001\001\t\002\001\004\t\001\001\001\000\001\001\001\000\001\001\002\000\003\001\003\000\005\001\004\000\004\001\001\000\002\001\001\t\001\001\001\000\r\001\001\000\001\001\002\000\001\t\001\001\001\000\005\001\001\000\002\001\001\000\001\001\002\000\001\001\003\000\003\001\001\000\b\001\001\000\001\001\001\000\002\001\001\000\002\001";





  
  private Reader zzReader;





  
  private int zzState;





  
  private static int[] zzUnpackAttribute() {
    int[] result = new int[484];
    int offset = 0;
    offset = zzUnpackAttribute("\027\000\002\t\006\001\001\t\t\001\001\t\003\001\002\t\003\001\003\t\f\001\001\t\n\001\001\t\003\001\001\t\004\001\001\t\007\001\001\t\001\001\001\t\004\001\002\t\005\001\002\t\r\001\001\t\b\001\002\t\002\001\002\t\003\001\001\t\002\001\001\t\003\001\002\t\004\001\001\t\006\001\004\t\002\001\001\t\003\001\002\t\002\001\001\t\013\001\001\t\002\001\001\t\003\001\001\000\002\001\001\000\004\001\002\000\001\001\001\t\001\000\001\001\002\t\001\000\001\t\004\001\002\t\001\001\001\t\003\001\002\t\016\001\001\000\002\t\001\000\001\t\002\001\001\t\006\001\003\t\001\001\003\t\001\000\001\001\003\t\002\000\001\001\001\000\006\t\001\001\001\t\001\001\001\000\003\t\001\001\001\t\001\001\002\t\001\000\001\t\002\000\001\t\007\001\001\000\004\001\001\t\001\001\001\000\002\001\001\t\002\000\001\t\001\000\b\t\002\001\001\000\001\001\001\000\001\001\001\000\002\t\002\001\001\t\001\001\t\000\001\t\002\001\003\000\002\001\001\000\001\001\002\000\002\001\005\t\r\001\001\000\002\001\001\000\002\001\003\t\004\000\001\001\001\t\002\001\004\t\001\001\001\000\001\001\001\000\001\001\002\000\003\001\003\000\005\001\004\000\004\001\001\000\002\001\001\t\001\001\001\000\r\001\001\000\001\001\002\000\001\t\001\001\001\000\005\001\001\000\002\001\001\000\001\001\002\000\001\001\003\000\003\001\001\000\b\001\001\000\001\001\001\000\002\001\001\000\002\001", offset, result);
    return result;
  }
  
  private static int zzUnpackAttribute(String packed, int offset, int[] result) {
    int i = 0;
    int j = offset;
    int l = packed.length();
    label10: while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++); while (true)
      { result[j++] = value; if (--count <= 0)
          continue label10;  } 
    }  return j;
  }







  
  private int zzLexicalState = 0;


  
  private CharSequence zzBuffer = "";


  
  private int zzMarkedPos;


  
  private int zzCurrentPos;


  
  private int zzStartRead;

  
  private int zzEndRead;

  
  private boolean zzAtBOL = true;

  
  private boolean zzAtEOF;

  
  private boolean zzEOFDone;

  
  private boolean[] zzFin = new boolean[16385];

  
  long yychar = 0L;

  
  void closeHereStringIfAvailable() {
    if (yystate() == 44) {
      if (isInHereStringContent()) {
        leaveHereStringContent();
      }
      backToPreviousState();
    } 
  }

  
  protected CharSequence getBuffer() {
    return this.zzBuffer;
  }






  
  public _BashLexerBase(Reader in) {
    this.zzReader = in;
  }







  
  private static char[] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int k = 0;
    int j = 0;
    label16: while (k < packed.length()) {
      int count = packed.charAt(k++);
      char value = packed.charAt(k++); while (true)
      { map[j++] = value; if (--count <= 0)
          continue label16;  } 
    }  return map;
  }
  
  public final int getTokenStart() {
    return this.zzStartRead;
  }
  
  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }
  
  public void reset(CharSequence buffer, int start, int end, int initialState) {
    this.zzBuffer = buffer;
    this.zzCurrentPos = this.zzMarkedPos = this.zzStartRead = start;
    this.zzAtEOF = false;
    this.zzAtBOL = true;
    this.zzEndRead = end;
    yybegin(initialState);
  }







  
  private boolean zzRefill() throws IOException {
    return true;
  }




  
  public final int yystate() {
    return this.zzLexicalState;
  }






  
  public final void yybegin(int newState) {
    this.zzLexicalState = newState;
  }




  
  public final CharSequence yytext() {
    return this.zzBuffer.subSequence(this.zzStartRead, this.zzMarkedPos);
  }












  
  public final char yycharat(int pos) {
    return this.zzBuffer.charAt(this.zzStartRead + pos);
  }




  
  public final int yylength() {
    return this.zzMarkedPos - this.zzStartRead;
  }















  
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[0];
    } 
    
    throw new Error(message);
  }









  
  public void yypushback(int number) {
    if (number > yylength()) {
      zzScanError(2);
    }
    this.zzMarkedPos -= number;
  }














  
  public IElementType advance() throws IOException {
    int zzEndReadL = this.zzEndRead;
    CharSequence zzBufferL = this.zzBuffer;
    
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE; while (true) {
      int zzInput; CharSequence markerText; int zzFState; boolean dropLastChar; int zzFPos;
      boolean[] zzFinL;
      int zzMarkedPosL = this.zzMarkedPos;
      
      this.yychar += (zzMarkedPosL - this.zzStartRead);
      
      int zzAction = -1;
      
      int zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
      
      this.zzState = ZZ_LEXSTATE[this.zzLexicalState];

      
      int zzAttributes = zzAttrL[this.zzState];
      if ((zzAttributes & 0x1) == 1) {
        zzAction = this.zzState;
      }



      
      while (true) {
        if (zzCurrentPosL < zzEndReadL) {
          zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
          zzCurrentPosL += Character.charCount(zzInput);
        } else {
          if (this.zzAtEOF) {
            int i = -1;
            
            break;
          } 
          
          this.zzCurrentPos = zzCurrentPosL;
          this.zzMarkedPos = zzMarkedPosL;
          boolean eof = zzRefill();
          
          zzCurrentPosL = this.zzCurrentPos;
          zzMarkedPosL = this.zzMarkedPos;
          zzBufferL = this.zzBuffer;
          zzEndReadL = this.zzEndRead;
          if (eof) {
            int i = -1;
            
            break;
          } 
          zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
          zzCurrentPosL += Character.charCount(zzInput);
        } 
        
        int zzNext = zzTransL[zzRowMapL[this.zzState] + ZZ_CMAP(zzInput)];
        if (zzNext == -1)
          break;  this.zzState = zzNext;
        
        zzAttributes = zzAttrL[this.zzState];
        if ((zzAttributes & 0x1) == 1) {
          zzAction = this.zzState;
          zzMarkedPosL = zzCurrentPosL;
          if ((zzAttributes & 0x8) == 8) {
            break;
          }
        } 
      } 

      
      this.zzMarkedPos = zzMarkedPosL;
      
      if (zzInput == -1 && this.zzStartRead == this.zzCurrentPos) {
        this.zzAtEOF = true;
        return null;
      } 
      
      switch ((zzAction < 0) ? zzAction : ZZ_ACTION[zzAction]) {
        case 1:
          return BAD_CHARACTER;
        case 185:
          continue;
        case 2:
          if (yystate() == 44) {
            closeHereStringIfAvailable();
            return LINE_FEED;
          } 
          
          if ((yystate() == 26 || yystate() == 16 || yystate() == 6 || yystate() == 8) && isInState(40)) {
            backToPreviousState();
            return LINE_FEED;
          } 
          
          if (!heredocState().isEmpty()) {
            
            goToState(40);
            return LINE_FEED;
          } 
          
          return LINE_FEED;
        case 186:
          continue;
        case 3:
          return BACKSLASH;
        case 187:
          continue;
        case 4:
          return WHITESPACE;
        case 188:
          continue;
        case 5:
          return COMMENT;
        case 189:
          continue;
        case 6:
          return WORD;
        case 190:
          continue;
        case 7:
          return DOLLAR;
        case 191:
          continue;
        case 8:
          stringParsingState().enterString(); if (yystate() == 44 && !isInHereStringContent()) enterHereStringContent(); 
          goToState(24); return STRING_BEGIN;
        case 192:
          continue;
        case 9:
          return INTEGER_LITERAL;
        case 193:
          continue;
        case 10:
          closeHereStringIfAvailable(); return AMP;
        case 194:
          continue;
        case 11:
          return AT;
        case 195:
          continue;
        case 12:
          if (yystate() == 18) backToPreviousState();  stringParsingState().enterSubshell(); goToState(16); return LEFT_PAREN;
        case 196:
          continue;
        case 13:
          return RIGHT_PAREN;
        case 197:
          continue;
        case 14:
          if (yystate() == 18) backToPreviousState();  goToState(8); return EXPR_ARITH_SQUARE;
        case 198:
          continue;
        case 15:
          return PIPE;
        case 199:
          continue;
        case 16:
          if (yystate() == 34) { backToPreviousState(); } else { goToState(34); }  return BACKQUOTE;
        case 200:
          continue;
        case 17:
          closeHereStringIfAvailable(); return SEMI;
        case 201:
          continue;
        case 18:
          return EQ;
        case 202:
          continue;
        case 19:
          return LEFT_CURLY;
        case 203:
          continue;
        case 20:
          return (yystate() == 40 && !heredocState().isExpectingEvaluatingHeredoc()) ? HEREDOC_LINE : RIGHT_CURLY;
        case 204:
          continue;
        case 21:
          return GREATER_THAN;
        case 205:
          continue;
        case 22:
          return LESS_THAN;
        case 206:
          continue;
        case 23:
          return COND_OP_NOT;
        case 207:
          continue;
        case 24:
          if (isEmptyConditionalCommand()) {
            setEmptyConditionalCommand(false);
            backToPreviousState();
            return _EXPR_CONDITIONAL;
          } 
          setEmptyConditionalCommand(false);
          return WORD;
        
        case 208:
          continue;
        case 25:
          return COND_OP;
        case 209:
          continue;
        case 26:
          return LEFT_PAREN;
        case 210:
          continue;
        case 27:
          return ARITH_BASE_CHAR;
        case 211:
          continue;
        case 28:
          return ARITH_NEGATE;
        case 212:
          continue;
        case 29:
          return ARITH_BITWISE_XOR;
        case 213:
          continue;
        case 30:
          return RIGHT_SQUARE;
        case 214:
          continue;
        case 31:
          return ARITH_NUMBER;
        case 215:
          continue;
        case 32:
          return ARITH_BITWISE_AND;
        case 216:
          continue;
        case 33:
          return ARITH_MULT;
        case 217:
          continue;
        case 34:
          return ARITH_QMARK;
        case 218:
          continue;
        case 35:
          return ARITH_PLUS;
        case 219:
          continue;
        case 36:
          incOpenParenthesisCount(); return LEFT_PAREN;
        case 220:
          continue;
        case 37:
          decOpenParenthesisCount(); return RIGHT_PAREN;
        case 221:
          continue;
        case 38:
          return LEFT_SQUARE;
        case 222:
          continue;
        case 39:
          return ARITH_MINUS;
        case 223:
          continue;
        case 40:
          return COMMA;
        case 224:
          continue;
        case 41:
          return ARITH_BITWISE_NEGATE;
        case 225:
          continue;
        case 42:
          return ARITH_GT;
        case 226:
          continue;
        case 43:
          return ARITH_LT;
        case 227:
          continue;
        case 44:
          return ARITH_DIV;
        case 228:
          continue;
        case 45:
          return ARITH_MOD;
        case 229:
          continue;
        case 46:
          return ARITH_COLON;
        case 230:
          continue;
        case 47:
          backToPreviousState(); return _EXPR_ARITH_SQUARE;
        case 231:
          continue;
        case 48:
          return EXPR_ARITH_SQUARE;
        case 232:
          continue;
        case 49:
          backToPreviousState(); return RIGHT_SQUARE;
        case 233:
          continue;
        case 50:
          backToPreviousState(); return RIGHT_PAREN;
        case 234:
          continue;
        case 51:
          backToPreviousState(); if (stringParsingState().isInSubshell()) stringParsingState().leaveSubshell();  return RIGHT_PAREN;
        case 235:
          continue;
        case 52:
          backToPreviousState(); goToState(10); return LEFT_SQUARE;
        case 236:
          continue;
        case 53:
          goToState(10); return LEFT_SQUARE;
        case 237:
          continue;
        case 54:
          return STRING_DATA;
        case 238:
          continue;
        case 55:
          if (!stringParsingState().isInSubstring() && stringParsingState().isSubstringAllowed()) {
            stringParsingState().enterString();
            goToState(24);
            return STRING_BEGIN;
          } 
          
          stringParsingState().leaveString();
          backToPreviousState();
          return STRING_END;
        case 239:
          continue;
        case 56:
          if (yystate() == 34) {
            backToPreviousState();
          } else {
            
            goToState(34);
          } 
          return BACKQUOTE;
        case 240:
          continue;
        case 57:
          setParamExpansionHash(isParamExpansionWord()); return PARAM_EXPANSION_OP_HASH;
        case 241:
          continue;
        case 58:
          return PARAM_EXPANSION_OP_EXCL;
        case 242:
          continue;
        case 59:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_UPPERCASE_FIRST;
        case 243:
          continue;
        case 60:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_DOT;
        case 244:
          continue;
        case 61:
          setParamExpansionWord(true); return WORD;
        case 245:
          continue;
        case 62:
          return PARAM_EXPANSION_OP_STAR;
        case 246:
          continue;
        case 63:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_QMARK;
        case 247:
          continue;
        case 64:
          return PARAM_EXPANSION_OP_PLUS;
        case 248:
          continue;
        case 65:
          return PARAM_EXPANSION_OP_AT;
        case 249:
          continue;
        case 66:
          if (!isParamExpansionOther() && (!isParamExpansionWord() || !isParamExpansionHash()))
          {
            goToState(10);
          }
          
          return LEFT_SQUARE;
        case 250:
          continue;
        case 67:
          return PARAM_EXPANSION_OP_MINUS;
        case 251:
          continue;
        case 68:
          return PARAM_EXPANSION_OP_EQ;
        case 252:
          continue;
        case 69:
          setParamExpansionWord(false); setParamExpansionHash(false); setParamExpansionOther(false);
          return LEFT_CURLY;
        case 253:
          continue;
        case 70:
          setParamExpansionWord(false); setParamExpansionHash(false); setParamExpansionOther(false);
          backToPreviousState();
          closeHereStringIfAvailable();
          return RIGHT_CURLY;
        case 254:
          continue;
        case 71:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_LOWERCASE_FIRST;
        case 255:
          continue;
        case 72:
          goToState(28); return PARAM_EXPANSION_OP_SLASH;
        case 256:
          continue;
        case 73:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_PERCENT;
        case 257:
          continue;
        case 74:
          return PARAM_EXPANSION_OP_COLON;
        case 258:
          continue;
        case 75:
          backToPreviousState(); return PARAM_EXPANSION_PATTERN;
        case 259:
          continue;
        case 76:
          yypushback(1); backToPreviousState(); continue;
        case 260:
          continue;
        case 77:
          backToPreviousState(); goToState(32); return PARAM_EXPANSION_OP_SLASH;
        case 261:
          continue;
        case 78:
          backToPreviousState(); return WORD;
        case 262:
          continue;
        case 79:
          heredocState().pushMarker(this.zzCurrentPos, yytext(), (yystate() == 38));
          backToPreviousState();
          goToState(42);
          
          return HEREDOC_MARKER_START;
        case 263:
          continue;
        case 80:
          heredocState().removeMarker(this.zzCurrentPos); backToPreviousState(); return LINE_FEED;
        
        case 264:
          continue;
        case 81:
          markerText = yytext();
          dropLastChar = false;
          if (isInState(34) && yylength() >= 2 && yycharat(yylength() - 1) == '`') {
            markerText = markerText.subSequence(0, yylength() - 1);
            dropLastChar = true;
          } 
          
          if (heredocState().isNextMarker(markerText)) {
            boolean ignoreTabs = heredocState().isIgnoringTabs();
            
            heredocState().popMarker(markerText);
            popStates(40);
            if (heredocState().isEmpty() && yystate() == 42) {
              backToPreviousState();
            }
            
            if (dropLastChar) {
              yypushback(1);
            }
            
            return ignoreTabs ? HEREDOC_MARKER_IGNORING_TABS_END : HEREDOC_MARKER_END;
          } 
          
          return HEREDOC_LINE;
        case 265:
          continue;
        case 82:
          if (!heredocState().isEmpty()) {
            return HEREDOC_LINE;
          }
          return LINE_FEED;
        case 266:
          continue;
        case 83:
          return HEREDOC_LINE;
        case 267:
          continue;
        case 84:
          if (heredocState().isNextMarker(yytext())) {
            boolean ignoreTabs = heredocState().isIgnoringTabs();
            
            heredocState().popMarker(yytext());
            popStates(40);
            if (heredocState().isEmpty() && yystate() == 42) {
              backToPreviousState();
            }
            
            return ignoreTabs ? HEREDOC_MARKER_IGNORING_TABS_END : HEREDOC_MARKER_END;
          } 
          
          return HEREDOC_LINE;
        case 268:
          continue;
        case 85:
          if (isInHereStringContent()) { leaveHereStringContent(); backToPreviousState(); }  return WHITESPACE;
        case 269:
          continue;
        case 86:
          if (!isInHereStringContent()) enterHereStringContent();  return WORD;
        case 270:
          continue;
        case 87:
          return LINE_CONTINUATION;
        case 271:
          continue;
        case 88:
          return SHEBANG;
        case 272:
          continue;
        case 89:
          return VARIABLE;
        case 273:
          continue;
        case 90:
          yypushback(1); goToState(8); return DOLLAR;
        case 274:
          continue;
        case 91:
          if (yystate() == 40 && !heredocState().isExpectingEvaluatingHeredoc()) return HEREDOC_LINE;  goToState(26); yypushback(1); return DOLLAR;
        case 275:
          continue;
        case 92:
          if (yystate() == 44 && !isInHereStringContent()) enterHereStringContent();  return STRING2;
        
        case 276:
          continue;
        case 93:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -1);
          return ASSIGNMENT_WORD;
        case 277:
          continue;
        case 94:
          return FILEDESCRIPTOR;
        case 278:
          continue;
        case 95:
          closeHereStringIfAvailable(); return AND_AND;
        case 279:
          continue;
        case 96:
          if (isBash4()) {
            return REDIRECT_AMP_GREATER;
          }
          yypushback(1);
          return AMP;
        
        case 280:
          continue;
        case 97:
          return ADD_EQ;
        case 281:
          continue;
        case 98:
          if (yystate() == 18) backToPreviousState();  goToState(6); return EXPR_ARITH;
        case 282:
          continue;
        case 99:
          goToState(2); setEmptyConditionalCommand(false); return EXPR_CONDITIONAL;
        case 283:
          continue;
        case 100:
          if (isBash4()) {
            return PIPE_AMP;
          }
          yypushback(1);
          return PIPE;
        
        case 284:
          continue;
        case 101:
          closeHereStringIfAvailable(); return OR_OR;
        case 285:
          continue;
        case 102:
          return IF_KEYWORD;
        case 286:
          continue;
        case 103:
          return DO_KEYWORD;
        case 287:
          continue;
        case 104:
          return FI_KEYWORD;
        case 288:
          continue;
        case 105:
          return REDIRECT_GREATER_BAR;
        case 289:
          continue;
        case 106:
          return SHIFT_RIGHT;
        case 290:
          continue;
        case 107:
          return REDIRECT_LESS_GREATER;
        case 291:
          continue;
        case 108:
          goToState(36);
          return HEREDOC_MARKER_TAG;
        case 292:
          continue;
        case 109:
          backToPreviousState(); setEmptyConditionalCommand(false); return _EXPR_CONDITIONAL;
        case 293:
          continue;
        case 110:
          return COND_OP_EQ_EQ;
        case 294:
          continue;
        case 111:
          return COND_OP_REGEX;
        
        case 295:
          continue;
        case 112:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 1);
          goToState(18); return DOLLAR;
        case 296:
          continue;
        case 113:
          return AND_AND;
        case 297:
          continue;
        case 114:
          return OR_OR;
        case 298:
          continue;
        case 115:
          return ARITH_NE;
        
        case 299:
          continue;
        case 116:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 1);
          if (yystate() == 40 && !heredocState().isExpectingEvaluatingHeredoc()) return HEREDOC_LINE;  goToState(18); return DOLLAR;
        case 300:
          continue;
        case 117:
          return ARITH_ASS_BIT_XOR;
        
        case 301:
          continue;
        case 118:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -1);
          goToState(20); return ASSIGNMENT_WORD;
        case 302:
          continue;
        case 119:
          return ARITH_ASS_BIT_AND;
        case 303:
          continue;
        case 120:
          return ARITH_EXPONENT;
        case 304:
          continue;
        case 121:
          return ARITH_ASS_MUL;
        case 305:
          continue;
        case 122:
          return ARITH_PLUS_PLUS;
        case 306:
          continue;
        case 123:
          return ARITH_ASS_PLUS;
        case 307:
          continue;
        case 124:
          if (openParenthesisCount() > 0) {
            decOpenParenthesisCount();
            yypushback(1);
            
            return RIGHT_PAREN;
          } 
          backToPreviousState();
          
          return _EXPR_ARITH;
        
        case 308:
          continue;
        case 125:
          return ARITH_MINUS_MINUS;
        case 309:
          continue;
        case 126:
          return ARITH_ASS_MINUS;
        case 310:
          continue;
        case 127:
          return ARITH_OCTAL_NUMBER;
        case 311:
          continue;
        case 128:
          return ARITH_ASS_BIT_OR;
        case 312:
          continue;
        case 129:
          return ARITH_EQ;
        case 313:
          continue;
        case 130:
          return ARITH_GE;
        case 314:
          continue;
        case 131:
          return ARITH_SHIFT_RIGHT;
        case 315:
          continue;
        case 132:
          return ARITH_LE;
        case 316:
          continue;
        case 133:
          return ARITH_SHIFT_LEFT;
        case 317:
          continue;
        case 134:
          return ARITH_ASS_DIV;
        case 318:
          continue;
        case 135:
          return ARITH_ASS_MOD;
        case 319:
          continue;
        case 136:
          goToState(14);
          if (isBash4()) {
            return CASE_END;
          }
          
          yypushback(1);
          return SEMI;
        
        case 320:
          continue;
        case 137:
          goToState(14); return CASE_END;
        case 321:
          continue;
        case 138:
          if (!isInCaseBody()) { setInCaseBody(true); goToState(14); }  return WORD;
        case 322:
          continue;
        case 139:
          setParamExpansionHash(isParamExpansionWord()); return PARAM_EXPANSION_OP_HASH_HASH;
        case 323:
          continue;
        case 140:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_UPPERCASE_ALL;
        
        case 324:
          continue;
        case 141:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 1);
          return LEFT_SQUARE;
        case 325:
          continue;
        case 142:
          setParamExpansionOther(true); return PARAM_EXPANSION_OP_LOWERCASE_ALL;
        case 326:
          continue;
        case 143:
          goToState(28); return PARAM_EXPANSION_OP_SLASH_SLASH;
        case 327:
          continue;
        case 144:
          return PARAM_EXPANSION_OP_COLON_QMARK;
        case 328:
          continue;
        case 145:
          return PARAM_EXPANSION_OP_COLON_PLUS;
        case 329:
          continue;
        case 146:
          return PARAM_EXPANSION_OP_COLON_MINUS;
        case 330:
          continue;
        case 147:
          return PARAM_EXPANSION_OP_COLON_EQ;
        
        case 331:
          continue;
        case 148:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -1);
          backToPreviousState(); goToState(30); return PARAM_EXPANSION_PATTERN;
        case 332:
          continue;
        case 149:
          if (heredocState().isNextMarker(yytext())) {
            boolean ignoreTabs = heredocState().isIgnoringTabs();
            
            heredocState().popMarker(yytext());
            popStates(40);
            if (heredocState().isEmpty() && yystate() == 42) {
              backToPreviousState();
            }
            
            return ignoreTabs ? HEREDOC_MARKER_IGNORING_TABS_END : HEREDOC_MARKER_END;
          } 
          
          return (yystate() == 40 && heredocState().isExpectingEvaluatingHeredoc() && !"$".equals(yytext().toString())) ? VARIABLE : HEREDOC_LINE;
        
        case 333:
          continue;
        
        case 150:
          if (!isInHereStringContent()) enterHereStringContent();  return VARIABLE;
        
        case 334:
          continue;
        case 151:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -2);
          return ASSIGNMENT_WORD;
        
        case 335:
          continue;
        case 152:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -2);
          goToState(22); return ASSIGNMENT_WORD;
        case 336:
          continue;
        case 153:
          if (isBash4()) {
            return REDIRECT_AMP_GREATER_GREATER;
          }
          yypushback(2);
          return AMP;
        
        case 337:
          continue;
        case 154:
          if (yystate() == 18) backToPreviousState();  yypushback(2); goToState(16); return LEFT_PAREN;
        case 338:
          continue;
        case 155:
          goToState(4); return BRACKET_KEYWORD;
        case 339:
          continue;
        case 156:
          yypushback(1); goToState(2); setEmptyConditionalCommand(true); return EXPR_CONDITIONAL;
        case 340:
          continue;
        case 157:
          return LET_KEYWORD;
        case 341:
          continue;
        case 158:
          return FOR_KEYWORD;
        
        case 342:
          continue;
        case 159:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 2);
          return REDIRECT_GREATER_AMP;
        
        case 343:
          continue;
        case 160:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 2);
          return REDIRECT_LESS_AMP;
        case 344:
          continue;
        case 161:
          goToState(38);
          return HEREDOC_MARKER_TAG;
        case 345:
          continue;
        case 162:
          goToState(44); return REDIRECT_HERE_STRING;
        case 346:
          continue;
        case 163:
          backToPreviousState(); return _BRACKET_KEYWORD;
        
        case 347:
          continue;
        case 164:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 2);
          yypushback(1); return ARITH_MINUS;
        case 348:
          continue;
        case 165:
          return ARITH_HEX_NUMBER;
        case 349:
          continue;
        case 166:
          return ARITH_ASS_SHIFT_RIGHT;
        case 350:
          continue;
        case 167:
          return ARITH_ASS_SHIFT_LEFT;
        
        case 351:
          continue;
        case 168:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzStartRead, 1);
          backToPreviousState(); goToState(22); return RIGHT_SQUARE;
        case 352:
          continue;
        case 169:
          goToState(14);
          if (!isBash4()) {
            yypushback(1);
          }
          return CASE_END;
        
        case 353:
          continue;
        case 170:
          this
            .zzMarkedPos = Character.offsetByCodePoints(zzBufferL, this.zzMarkedPos, -3);
          goToState(22); return ASSIGNMENT_WORD;
        
        case 354:
          continue;
        case 171:
          zzFState = 21;
          zzFPos = this.zzStartRead;
          if (this.zzFin.length <= zzBufferL.length()) this.zzFin = new boolean[zzBufferL.length() + 1]; 
          zzFinL = this.zzFin;
          while (zzFState != -1 && zzFPos < this.zzMarkedPos) {
            zzFinL[zzFPos] = ((zzAttrL[zzFState] & 0x1) == 1);
            zzInput = Character.codePointAt(zzBufferL, zzFPos);
            zzFPos += Character.charCount(zzInput);
            zzFState = zzTransL[zzRowMapL[zzFState] + ZZ_CMAP(zzInput)];
          } 
          if (zzFState != -1) zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 0x1) == 1); 
          while (zzFPos <= this.zzMarkedPos) {
            zzFinL[zzFPos++] = false;
          }
          
          zzFState = 22;
          zzFPos = this.zzMarkedPos;
          while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 0x1) != 1) {
            zzInput = Character.codePointBefore(zzBufferL, zzFPos);
            zzFPos -= Character.charCount(zzInput);
            zzFState = zzTransL[zzRowMapL[zzFState] + ZZ_CMAP(zzInput)];
          } 
          this.zzMarkedPos = zzFPos;
          
          goToState(20); return ASSIGNMENT_WORD;
        case 355:
          continue;
        case 172:
          return TIME_KEYWORD;
        case 356:
          continue;
        case 173:
          return TRAP_KEYWORD;
        case 357:
          continue;
        case 174:
          return THEN_KEYWORD;
        case 358:
          continue;
        case 175:
          return ELIF_KEYWORD;
        case 359:
          continue;
        case 176:
          return ELSE_KEYWORD;
        case 360:
          continue;
        case 177:
          setInCaseBody(false); goToState(12); return CASE_KEYWORD;
        case 361:
          continue;
        case 178:
          return DONE_KEYWORD;
        case 362:
          continue;
        case 179:
          backToPreviousState(); return ESAC_KEYWORD;
        case 363:
          continue;
        case 180:
          backToPreviousState(); yypushback(yylength()); continue;
        case 364:
          continue;
        case 181:
          return UNTIL_KEYWORD;
        case 365:
          continue;
        case 182:
          return WHILE_KEYWORD;
        case 366:
          continue;
        case 183:
          return SELECT_KEYWORD;
        case 367:
          continue;
        case 184:
          return FUNCTION_KEYWORD;
        case 368:
          continue;
      } 
      zzScanError(1);
    } 
  }
}
